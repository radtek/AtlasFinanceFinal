@model Atlas.Online.Web.Models.LoginDetailsModel

@using Atlas.Online.Web.Extensions.Ng

@using (Html.NgBeginForm(htmlAttributes: new Dictionary<string, object>() { { "name", "form" }, { "novalidate", "novalidate" }, {"f8-initialize-model", null} }))
{
    <p class="fc-beta fs-zeta"><strong>To change your password, please fill out the fields below.</strong></p>
    <div class="row row-ib-cols row-ib-cols-va-m cf">
        <div class="field cf">
            <div class="col sm-1-3 pr-micro">
				@Html.LabelFor(x => x.Email, new { @class = "field-label" })
			</div>
			<div class="col sm-2-3">
                @Html.NgTextBoxFor(x => x.Email, new Dictionary<string, object>() {
                    {"type", "email"},
                    {"class", "d-block"}, 
                    {"validate-remotely", null },
                    {"validate-on-startup", false},
                    { "endpoint", Url.HttpRouteUrl("ActionApi", new { controller = "Accounts", action = "EmailInUse", email = ":value"}) }
               })
			</div>
            @Html.NgLoader(text: "checking...", ngShow: "form.Email.$error.remotevaliditypending")
            @Html.NgValidationMessagesFor(m => m.Email)
        </div>
        <div class="field cf">
            <div class="col sm-1-3 pr-micro">
				@Html.LabelFor(x => x.CurrentPassword, new { @class = "field-label" })
			</div>
			<div class="col sm-2-3">
				@Html.NgPasswordFor(x => x.CurrentPassword, new { @class = "d-block" })
			</div>
            @Html.NgValidationMessagesFor(x => x.CurrentPassword)
		</div>
        <div class="field cf">
			<div class="col sm-1-3 pr-micro">
				@Html.LabelFor(x => x.Password, new { @class = "field-label" })
			</div>
			<div class="col sm-2-3">
				@Html.NgPasswordFor(x => x.Password, new { @class = "d-block" })
			</div>
            @Html.NgValidationMessagesFor(x => x.Password)
		</div>
        <div class="field cf">
			<div class="col sm-1-3 pr-micro">
				@Html.LabelFor(x => x.PasswordConfirm, new { @class = "field-label" })
			</div>
			<div class="col sm-2-3">
				@Html.NgPasswordFor(x => x.PasswordConfirm, new { @class = "d-block" })
			</div>
            @Html.NgValidationMessagesFor(x => x.PasswordConfirm)
		</div>
    </div>
	<div class="ar">
        <label for="submit" class="btn" ng-class="{ disabled: form.$invalid }">
            <input id="submit" name="submit" type="submit" ng-disabled="form.$invalid" ng-click="update($event)" value="Update">
        </label>
    </div>
}