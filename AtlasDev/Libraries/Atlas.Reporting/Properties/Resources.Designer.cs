//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Atlas.Reporting.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Atlas.Reporting.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT BR.&quot;BranchId&quot;, CP.&quot;Name&quot; AS &quot;BranchName&quot;, 
        ///	SUM(&quot;Cheque&quot;) AS &quot;Cheque&quot;, 
        ///	SUM(HI.&quot;HandedOverLoansAmount&quot;) AS &quot;HandedOverLoansAmount&quot;,
        ///	SUM(&quot;Collections&quot;) as &quot;Collections&quot;
        ///FROM &quot;ASS_CiReport&quot; CI
        ///LEFT JOIN &quot;BRN_Branch&quot; BR ON CI.&quot;BranchId&quot; = BR.&quot;BranchId&quot;
        ///LEFT JOIN &quot;CPY_Company&quot; CP ON BR.&quot;Company&quot; = CP.&quot;CompanyId&quot;
        ///LEFT JOIN &quot;ASS_CiReportHandoverInfo&quot; HI ON CI.&quot;BranchId&quot; = HI.&quot;BranchId&quot;
        ///	AND CI.&quot;Date&quot; = HI.&quot;Date&quot;
        ///	AND CI.&quot;PayNo&quot; = HI.&quot;PayNo&quot;
        ///WHERE CI.&quot;Date&quot; BETWEEN &apos;{0}&apos; AND &apos;{1}&apos;
        ///	AND CI.&quot;Bran [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ASS_CiReportBranchSummaries {
            get {
                return ResourceManager.GetString("ASS_CiReportBranchSummaries", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT &quot;BranchId&quot;, MIN(&quot;Date&quot;) AS &quot;LastImportDate&quot;
        ///FROM (
        ///	SELECT BR.&quot;BranchId&quot;, MAX(CI.&quot;Date&quot;) AS &quot;Date&quot;
        ///	FROM &quot;BRN_Branch&quot; BR
        ///	LEFT JOIN &quot;ASS_CiReport&quot; CI ON BR.&quot;BranchId&quot; = CI.&quot;BranchId&quot;
        ///	GROUP BY BR.&quot;BranchId&quot; 
        ///
        ///	UNION 
        ///
        ///	SELECT BR.&quot;BranchId&quot;, MAX(CS.&quot;Date&quot;)
        ///	FROM &quot;BRN_Branch&quot; BR
        ///	LEFT JOIN &quot;ASS_CiReportScore&quot; CS ON BR.&quot;BranchId&quot;  = CS.&quot;BranchId&quot;
        ///	GROUP BY BR.&quot;BranchId&quot; 
        ///
        ///	UNION 
        ///
        ///	SELECT BR.&quot;BranchId&quot;, MAX(PH.&quot;Date&quot;)
        ///	FROM &quot;BRN_Branch&quot; BR
        ///	LEFT JOIN &quot;ASS_CiReportPossibleHandover&quot; PH O [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ASS_CiReportLastImportDate {
            get {
                return ResourceManager.GetString("ASS_CiReportLastImportDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to --SELECT CP.&quot;Name&quot;, TG.&quot;Target&quot;, TG.&quot;Target&quot; - CH.&quot;Cheque&quot; AS &quot;Achieved&quot;, (TG.&quot;Target&quot; - CH.&quot;Cheque&quot;) / TG.&quot;Target&quot; AS &quot;AchievedPercent&quot;, CAST((TG.&quot;Target&quot; - CH.&quot;Cheque&quot;) / 3300 AS INT) AS &quot;NoOfLoansRequired&quot;
        ///--FROM (
        ///--	SELECT CI.&quot;BranchId&quot;, SUM(CI.&quot;Cheque&quot;) AS &quot;Cheque&quot;
        ///--	FROM &quot;ASS_CiReport&quot; CI
        ///--	WHERE CI.&quot;BranchId&quot; IN ({2}) 
        ///--		AND CI.&quot;Date&quot; BETWEEN &apos;{0}&apos; AND &apos;{1}&apos;
        ///--	GROUP BY CI.&quot;BranchId&quot;) CH
        ///--INNER JOIN (SELECT BR.&quot;BranchId&quot;, BR.&quot;Company&quot;, SUM((BM.&quot;Amount&quot; * TP.&quot;DailyPhase&quot; / 100) * (LM.&quot;Per [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ASS_CiReportLowMean {
            get {
                return ResourceManager.GetString("ASS_CiReportLowMean", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT {2}, 
        ///	SUM(CI.&quot;PossibleHandOvers&quot;) AS &quot;PossibleHandovers&quot;,
        ///	SUM(TG.&quot;HandoverBudget&quot;) AS &quot;HandoverBudget&quot;, 
        ///	SUM(CI.&quot;PossibleHandOvers&quot;) - SUM(TG.&quot;HandoverBudget&quot;) AS &quot;Variance&quot;, 
        ///	CASE WHEN SUM(TG.&quot;HandoverBudget&quot;) = 0
        ///		THEN 0
        ///		ELSE SUM(CI.&quot;PossibleHandOvers&quot;) / SUM(TG.&quot;HandoverBudget&quot;)
        ///	END AS &quot;ActualVsBudgetPercent&quot;, 
        ///	SUM(CI.&quot;NextPossibleHandOvers&quot;) AS &quot;NextPossibleHandovers&quot;,
        ///	SUM(CI.&quot;NextPossibleHandOvers&quot;) - SUM(TG.&quot;HandoverBudget&quot;) AS &quot;NextMonthBreakEven&quot;,
        ///	SUM(CI.&quot;DebtorsBookValue [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ASS_CiReportPossibleHandovers {
            get {
                return ResourceManager.GetString("ASS_CiReportPossibleHandovers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WITH CTE_Total AS 
        ///(
        ///	SELECT {3}, 
        ///		0 AS &quot;PayNo&quot;, 
        ///		CASE WHEN SUM(&quot;Cheque&quot;) = 0 
        ///			THEN 0 
        ///			ELSE SUM(&quot;ChargesExclVAT&quot;) / SUM(&quot;Cheque&quot;) 
        ///		END AS &quot;ChargesPercent&quot;,
        ///		CASE WHEN SUM(&quot;Cheque&quot;) = 0 
        ///			THEN 0 
        ///			ELSE SUM(&quot;CreditLife&quot;) / SUM(&quot;Cheque&quot;) 
        ///		END AS &quot;CreditLifePercent&quot;,
        ///		CASE WHEN SUM(&quot;Cheque&quot;) = 0 
        ///			THEN 0 
        ///			ELSE SUM(&quot;LoanFeeExclVAT&quot;) / SUM(&quot;Cheque&quot;) 
        ///		END AS &quot;LoanFeePercent&quot;,
        ///		CASE WHEN SUM(&quot;Cheque&quot;) = 0 
        ///			THEN 0 
        ///			ELSE SUM(&quot;TotFeeExcl&quot;) / SUM(&quot;Cheque&quot;) 
        ///		END AS  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ASS_CiReportSales {
            get {
                return ResourceManager.GetString("ASS_CiReportSales", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT {3}, LM.&quot;PayNo&quot;, SUM((BM.&quot;Amount&quot; * TP.&quot;DailyPhase&quot; / 100) * (LM.&quot;Percent&quot;/100)) AS &quot;Target&quot;, (LM.&quot;Percent&quot;/100) AS &quot;TargetPercent&quot;
        ///FROM &quot;BRN_Branch&quot; BR
        ///LEFT JOIN &quot;CPY_Company&quot; CP ON BR.&quot;Company&quot; = CP.&quot;CompanyId&quot;
        ///LEFT JOIN &quot;Region&quot; RG ON BR.&quot;Region&quot; = RG.&quot;RegionId&quot;
        ///LEFT JOIN &quot;TAR_BranchCIMonthly&quot; BM ON BR.&quot;BranchId&quot; = BM.&quot;BranchId&quot;
        ///	AND EXTRACT(MONTH FROM BM.&quot;TargetDate&quot;) = EXTRACT(MONTH FROM to_date(&apos;{0}&apos;, &apos;yyyy-MM-dd&apos;))
        ///	AND EXTRACT(YEAR FROM BM.&quot;TargetDate&quot;) = EXTRACT(YEAR FROM to_date(&apos;{0}&apos; [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ASS_CiReportSalesTargets {
            get {
                return ResourceManager.GetString("ASS_CiReportSalesTargets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT {3}, 
        ///	CI.&quot;PayNo&quot;, 
        ///	SUM(&quot;ScoreAboveXWeekly&quot;) AS &quot;Weekly615&quot;, SUM(&quot;ScoreAboveXBiWeekly&quot;) AS &quot;BiWeekly615&quot;, SUM(&quot;ScoreAboveXMonthly&quot;) AS &quot;Monthly615&quot;, 
        ///	SUM(&quot;ScoreAboveXWeekly&quot; + &quot;ScoreAboveXBiWeekly&quot; + &quot;ScoreAboveXMonthly&quot;) AS &quot;Total615&quot;
        ///FROM &quot;ASS_CiReportScore&quot; CI
        ///LEFT JOIN &quot;BRN_Branch&quot; BR ON CI.&quot;BranchId&quot; = BR.&quot;BranchId&quot;
        ///LEFT JOIN &quot;CPY_Company&quot; CP ON BR.&quot;Company&quot; = CP.&quot;CompanyId&quot;
        ///LEFT JOIN &quot;Region&quot; RG ON BR.&quot;Region&quot; = RG.&quot;RegionId&quot;
        ///WHERE &quot;Date&quot; BETWEEN &apos;{0}&apos; AND &apos;{1}&apos;
        ///	AND CI.&quot;BranchId&quot; IN [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ASS_CiReportScore {
            get {
                return ResourceManager.GetString("ASS_CiReportScore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT 
        ///	CSE.&quot;CaseId&quot; AS &quot;CaseNo&quot;,
        ///	STA.&quot;Description&quot; AS &quot;CaseStatus&quot;,
        ///	STR.&quot;Description&quot; AS &quot;Stream&quot;,
        ///	CTG.&quot;Description&quot; || &apos; - &apos; || SBC.&quot;Description&quot; AS &quot;Category&quot;,
        ///	DB.&quot;IdNumber&quot;, DB.&quot;FirstName&quot;, DB.&quot;LastName&quot;
        ///FROM &quot;STR_Case&quot; CSE
        ///INNER JOIN &quot;STR_CaseStream&quot; CST ON CSE.&quot;CaseId&quot; = CST.&quot;CaseId&quot;
        ///	AND CST.&quot;CompleteDate&quot; IS NULL
        ///LEFT JOIN &quot;STR_Debtor&quot; DB ON CSE.&quot;DebtorId&quot; = DB.&quot;DebtorId&quot;
        ///LEFT JOIN &quot;STR_CaseStatus&quot; STA ON CSE.&quot;CaseStatusId&quot; = STA.&quot;CaseStatusId&quot;
        ///LEFT JOIN &quot;STR_SubCategory&quot; SBC ON CSE. [rest of string was truncated]&quot;;.
        /// </summary>
        public static string STR_Detail {
            get {
                return ResourceManager.GetString("STR_Detail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WITH CTE_Allocation AS 
        ///(
        ///	SELECT &quot;GroupId&quot;, 
        ///		&quot;RegionId&quot;, 
        ///		&quot;BranchId&quot;, 
        ///		&quot;AllocatedUserId&quot;, 
        ///		&quot;CategoryId&quot;, 
        ///		&quot;SubCategoryId&quot;, 
        ///		SUM(&quot;SMSCount&quot;) AS &quot;SMSSent&quot;, 
        ///		SUM(&quot;NoActionCount&quot;) as &quot;NoActions&quot;
        ///	FROM (
        ///	SELECT DISTINCT CSE.&quot;GroupId&quot;, BRN.&quot;Region&quot; AS &quot;RegionId&quot;, BRN.&quot;BranchId&quot;, CAL.&quot;AllocatedUserId&quot;, SCT.&quot;CategoryId&quot;, SCT.&quot;SubCategoryId&quot;,CSE.&quot;CaseId&quot;, CST.&quot;CaseStreamId&quot;, 
        ///		CAL.&quot;SMSCount&quot;, CAL.&quot;NoActionCount&quot;
        ///	FROM &quot;STR_CaseStreamAction&quot; CSA
        ///	LEFT JOIN &quot;STR_CaseStream&quot; CST ON CSA.&quot;C [rest of string was truncated]&quot;;.
        /// </summary>
        public static string STR_Performance {
            get {
                return ResourceManager.GetString("STR_Performance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT CSE.&quot;CaseId&quot;,
        ///		CASE 
        ///			WHEN CSE.&quot;CaseStatusId&quot; IN (4, 5) AND CSE.&quot;CreateDate&quot;::date = CSE.&quot;LastStatusDate&quot;::date  -- &quot;Handed Over&quot;, &quot;Closed&quot;
        ///				THEN  0 
        ///			ELSE ACC.&quot;AccountId&quot; 
        ///		END AS &quot;TotalAccounts&quot;,
        ///		-- NEW Accounts
        ///		CASE 
        ///			WHEN CST.&quot;StreamId&quot; = 1 -- NEW
        ///				AND CST.&quot;CreateDate&quot; BETWEEN &apos;{0}&apos; AND &apos;{1}&apos;
        ///				THEN CST.&quot;CaseStreamId&quot;
        ///			ELSE 0
        ///		END AS &quot;NewAccountsThisMonth&quot;,
        ///		CASE 
        ///			WHEN CST.&quot;StreamId&quot; = 1 -- NEW
        ///				AND CST.&quot;CreateDate&quot; &lt; &apos;{0}&apos;
        ///				THEN CST.&quot;CaseStreamId&quot; [rest of string was truncated]&quot;;.
        /// </summary>
        public static string STR_PerformanceAccounts {
            get {
                return ResourceManager.GetString("STR_PerformanceAccounts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///	SELECT &quot;GroupId&quot;, 
        ///		&quot;RegionId&quot;, 
        ///		&quot;BranchId&quot;, 
        ///		&quot;AllocatedUserId&quot;, 
        ///		&quot;CategoryId&quot;, 
        ///		&quot;SubCategoryId&quot;, 
        ///		&quot;CaseId&quot;, 
        ///		&quot;SMSCount&quot; AS &quot;SMSSent&quot;, 
        ///		&quot;NoActionCount&quot; as &quot;NoActions&quot;
        ///	FROM (
        ///	SELECT DISTINCT CSE.&quot;GroupId&quot;, BRN.&quot;Region&quot; AS &quot;RegionId&quot;, BRN.&quot;BranchId&quot;, CAL.&quot;AllocatedUserId&quot;, SCT.&quot;CategoryId&quot;, SCT.&quot;SubCategoryId&quot;,CSE.&quot;CaseId&quot;, CST.&quot;CaseStreamId&quot;, 
        ///		CAL.&quot;SMSCount&quot;, CAL.&quot;NoActionCount&quot;
        ///	FROM &quot;STR_CaseStreamAction&quot; CSA
        ///	LEFT JOIN &quot;STR_CaseStream&quot; CST ON CSA.&quot;CaseStreamId&quot; = CST.&quot;Ca [rest of string was truncated]&quot;;.
        /// </summary>
        public static string STR_PerformanceAccountsAllocation {
            get {
                return ResourceManager.GetString("STR_PerformanceAccountsAllocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///	SELECT  &quot;GroupId&quot;, 
        ///		&quot;RegionId&quot;, 
        ///		&quot;BranchId&quot;, 
        ///		&quot;AllocatedUserId&quot;, 
        ///		&quot;CategoryId&quot;, 
        ///		&quot;SubCategoryId&quot;, 
        ///		&quot;CaseId&quot;
        ///		--COUNT(*) AS &quot;EscalatedCases&quot;
        ///	FROM (
        ///		SELECT CSE.&quot;GroupId&quot;, 
        ///			BRN.&quot;Region&quot; AS &quot;RegionId&quot;, 
        ///			BRN.&quot;BranchId&quot;, 
        ///			CAL.&quot;AllocatedUserId&quot;, 
        ///			SCT.&quot;CategoryId&quot;, 
        ///			SCT.&quot;SubCategoryId&quot;, 
        ///			CSE.&quot;CaseId&quot;,
        ///			RANK() OVER (PARTITION BY CAL.&quot;AllocatedUserId&quot;, CAL.&quot;CaseStreamId&quot; ORDER BY CES.&quot;CreateDate&quot;) AS Rank
        ///		FROM &quot;STR_CaseStreamAllocation&quot; CAL
        ///		INNER JOIN &quot;STR_ [rest of string was truncated]&quot;;.
        /// </summary>
        public static string STR_PerformanceAccountsEscalatedCases {
            get {
                return ResourceManager.GetString("STR_PerformanceAccountsEscalatedCases", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///	SELECT CSE.&quot;GroupId&quot;, 
        ///		BRN.&quot;Region&quot; AS &quot;RegionId&quot;, 
        ///		BRN.&quot;BranchId&quot;, 
        ///		CAL.&quot;AllocatedUserId&quot;, 
        ///		SCT.&quot;CategoryId&quot;, 
        ///		SCT.&quot;SubCategoryId&quot;, 
        ///		CSE.&quot;CaseId&quot;,
        ///		CASE 
        ///			WHEN CAL.&quot;AllocatedDate&quot; BETWEEN &apos;{0}&apos; AND &apos;{1}&apos; AND CAL.&quot;TransferredIn&quot; = true THEN 1
        ///			ELSE 0
        ///		END AS &quot;TransfersIn&quot;, 
        ///		CASE 
        ///			WHEN CAL.&quot;TransferredOutDate&quot; BETWEEN &apos;{0}&apos; AND &apos;{1}&apos; AND CAL.&quot;TransferredOut&quot; = true THEN 1
        ///			ELSE 0
        ///		END AS &quot;TransfersOut&quot;
        ///	FROM &quot;STR_CaseStreamAllocation&quot; CAL
        ///	LEFT JOIN &quot;STR_CaseStrea [rest of string was truncated]&quot;;.
        /// </summary>
        public static string STR_PerformanceAccountsTransfers {
            get {
                return ResourceManager.GetString("STR_PerformanceAccountsTransfers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT 	
        ///	ALC.&quot;AllocatedUserId&quot;,
        ///	PSN.&quot;Firstname&quot; || &apos; &apos; || PSN.&quot;Lastname&quot; AS &quot;AllocatedUser&quot;,
        ///	CAST(CST.&quot;CreateDate&quot; AS date) AS &quot;Date&quot;,
        ///	
        ///	COUNT(DISTINCT CASE 
        ///		WHEN 
        ///			CST.&quot;CreateDate&quot; BETWEEN &apos;{0}&apos; AND &apos;{1}&apos; 
        ///			AND CSA.&quot;ActionTypeId&quot; = CASE WHEN CST.&quot;StreamId&quot; = 2 THEN 2 ELSE 3 END
        ///			AND CST.&quot;StreamId&quot; IN (2, 3) -- PTP, PTC
        ///		THEN CST.&quot;CaseStreamId&quot;
        ///		ELSE NULL
        ///		END) AS &quot;PtpPtcObtained&quot;, 	
        ///	COUNT(DISTINCT CASE 
        ///		WHEN 
        ///			CSA.&quot;ActionDate&quot; BETWEEN &apos;{0}&apos; AND &apos;{1}&apos;
        ///			AND &quot;StreamId&quot; =  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string STR_PerformanceDaily {
            get {
                return ResourceManager.GetString("STR_PerformanceDaily", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT 	BRN.&quot;Region&quot; AS &quot;RegionId&quot;,
        ///	RGN.&quot;Description&quot; AS &quot;Region&quot;,
        ///	CSE.&quot;BranchId&quot;,
        ///	CPY.&quot;Name&quot; AS &quot;Branch&quot;,
        ///	SBC.&quot;CategoryId&quot;,
        ///	CTG.&quot;Description&quot; AS &quot;Category&quot;,
        ///	SBC.&quot;SubCategoryId&quot;,
        ///	SBC.&quot;Description&quot; AS &quot;SubCategory&quot;,
        ///	COUNT(DISTINCT ACC.&quot;AccountId&quot;) AS &quot;Accounts&quot;, 
        ///	COUNT(DISTINCT CSE.&quot;DebtorId&quot;) AS &quot;Debtors&quot;, 
        ///	COUNT(DISTINCT CSE.&quot;CaseId&quot;) AS &quot;Cases&quot;, 
        ///	COUNT(DISTINCT 
        ///		CASE 
        ///			WHEN CSE.&quot;WorkableCase&quot; = false THEN CSE.&quot;CaseId&quot;
        ///			ELSE NULL
        ///		END) AS &quot;SystemClosedCases&quot;,
        ///	COUNT(DISTIN [rest of string was truncated]&quot;;.
        /// </summary>
        public static string STR_PerformanceReport {
            get {
                return ResourceManager.GetString("STR_PerformanceReport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT DISTINCT CSE.&quot;CaseId&quot;
        ///FROM &quot;STR_Case&quot; CSE
        ///LEFT JOIN &quot;BRN_Branch&quot; BRN ON CSE.&quot;BranchId&quot; = BRN.&quot;BranchId&quot;
        ///LEFT JOIN &quot;CPY_Company&quot; CPY ON BRN.&quot;Company&quot; = CPY.&quot;CompanyId&quot;
        ///LEFT JOIN &quot;Region&quot; RGN ON BRN.&quot;Region&quot; = RGN.&quot;RegionId&quot;
        ///LEFT JOIN &quot;STR_SubCategory&quot; SBC ON CSE.&quot;SubCategoryId&quot; = SBC.&quot;SubCategoryId&quot;
        ///LEFT JOIN &quot;STR_Category&quot; CTG ON SBC.&quot;CategoryId&quot; = CTG.&quot;CategoryId&quot;
        ///LEFT JOIN &quot;STR_CaseStream&quot; CST ON CSE.&quot;CaseId&quot; = CST.&quot;CaseId&quot;
        ///LEFT JOIN &quot;STR_Account&quot; ACC ON CSE.&quot;DebtorId&quot; = ACC.&quot;DebtorId&quot; 
        ///LE [rest of string was truncated]&quot;;.
        /// </summary>
        public static string STR_PerformanceReportDetail {
            get {
                return ResourceManager.GetString("STR_PerformanceReportDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT 	BRN.&quot;Region&quot; AS &quot;RegionId&quot;,
        ///	RGN.&quot;Description&quot; AS &quot;Region&quot;,
        ///	SBC.&quot;CategoryId&quot;,
        ///	CTG.&quot;Description&quot; AS &quot;Category&quot;,
        ///	SBC.&quot;SubCategoryId&quot;,
        ///	SBC.&quot;Description&quot; AS &quot;SubCategory&quot;,
        ///	COUNT(DISTINCT ACC.&quot;AccountId&quot;) AS &quot;Accounts&quot;, 
        ///	COUNT(DISTINCT CSE.&quot;DebtorId&quot;) AS &quot;Debtors&quot;, 
        ///	COUNT(DISTINCT CSE.&quot;CaseId&quot;) AS &quot;Cases&quot;, 
        ///	COUNT(DISTINCT 
        ///		CASE 
        ///			WHEN CSE.&quot;WorkableCase&quot; = false THEN CSE.&quot;CaseId&quot;
        ///			ELSE NULL
        ///		END) AS &quot;SystemClosedCases&quot;,
        ///	COUNT(DISTINCT 
        ///		CASE 
        ///			WHEN CSE.&quot;WorkableCase&quot; IS  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string STR_PerformanceReportRegion {
            get {
                return ResourceManager.GetString("STR_PerformanceReportRegion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT 	BRN.&quot;Region&quot; AS &quot;RegionId&quot;,
        ///	RGN.&quot;Description&quot; AS &quot;Region&quot;,
        ///	CSE.&quot;BranchId&quot;,
        ///	CPY.&quot;Name&quot; AS &quot;Branch&quot;,
        ///	ALC.&quot;AllocatedUserId&quot;,
        ///	PSN.&quot;Firstname&quot; || &apos; &apos; || PSN.&quot;Lastname&quot; AS &quot;AllocatedUser&quot;,
        ///	SBC.&quot;CategoryId&quot;,
        ///	CTG.&quot;Description&quot; AS &quot;Category&quot;,
        ///	SBC.&quot;SubCategoryId&quot;,
        ///	SBC.&quot;Description&quot; AS &quot;SubCategory&quot;,
        ///	COUNT(DISTINCT ACC.&quot;AccountId&quot;) AS &quot;Accounts&quot;, 
        ///	COUNT(DISTINCT CSE.&quot;DebtorId&quot;) AS &quot;Debtors&quot;, 
        ///	COUNT(DISTINCT CSE.&quot;CaseId&quot;) AS &quot;Cases&quot;, 
        ///	COUNT(DISTINCT 
        ///		CASE 
        ///			WHEN CSE.&quot;WorkableCase [rest of string was truncated]&quot;;.
        /// </summary>
        public static string STR_PerformanceReportUser {
            get {
                return ResourceManager.GetString("STR_PerformanceReportUser", resourceCulture);
            }
        }
    }
}
