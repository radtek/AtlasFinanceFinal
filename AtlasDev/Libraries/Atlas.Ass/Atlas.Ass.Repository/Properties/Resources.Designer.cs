//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Atlas.Ass.Repository.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Atlas.Ass.Repository.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT LN.brnum, MIN(TR.trdate) AS OldestArrearDate
        ///FROM company.loans LN 
        ///INNER JOIN company.trans TR ON TR.loan  = LN.loan 
        ///	AND TR.client = LN.client 
        ///	AND TR.brnum = LN.brnum 
        ///WHERE LN.brnum IN (&apos;{0}&apos;)
        ///	AND TR.trdate &lt;= current_date
        ///	AND TR.trtype IN (&apos;R&apos;)
        ///	AND NULLIF(TRIM(TR.trstat), &apos;&apos;) IS NULL 
        ///GROUP BY LN.brnum.
        /// </summary>
        internal static string OldestArrearsPerBranch {
            get {
                return ResourceManager.GetString("OldestArrearsPerBranch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 	SELECT TR.brnum AS &quot;LegacyBranchNumber&quot;, 
        ///		SUM(TR.tramount) AS &quot;ArrearsValue&quot;
        ///	FROM company.trans TR
        ///	INNER JOIN company.loans LN ON TR.loan = LN.loan
        ///		AND TR.client = LN.client
        ///		AND TR.brnum = LN.brnum
        ///		-- AND LN.nctrantype IN (&apos;USE&apos;, &apos;N/A&apos;, &apos;SIMSALEC&apos;, &apos;VAP&apos;)  KB 2015-07-15: To match Ass arrears reports used by Norman, Celia says include all ?!?
        ///	WHERE 
        ///		TR.trdate &lt;= CURRENT_DATE
        ///		AND TR.trtype = &apos;R&apos; 
        ///		AND NULLIF(TRIM(TR.trstat), &apos;&apos;) IS NULL 
        ///		-- AND LN.outamnt &gt; 0                      [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string QRY_Arrears {
            get {
                return ResourceManager.GetString("QRY_Arrears", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///SELECT &quot;PayNo&quot;,
        ///	&quot;LegacyBranchNumber&quot;, 
        ///	&quot;Quantity&quot;, 
        ///	&quot;Cheque&quot;, 
        ///	&quot;ChequeToday&quot;, 
        ///	&quot;BranchLoans&quot;, 
        ///	&quot;SalesRepLoans&quot;, 
        ///	&quot;ChargesExclVAT&quot;, 
        ///	&quot;ChargesVAT&quot;, 
        ///	&quot;TotalCharges&quot;, 
        ///	&quot;CreditLife&quot;,
        ///	&quot;LoanFeeExclVAT&quot;, 
        ///	&quot;LoanFeeVAT&quot;, 
        ///	&quot;LoanFeeInclVAT&quot;, 
        ///	&quot;ScoreAbove615Weekly&quot;, 
        ///	&quot;ScoreAbove615BiWeekly&quot;, 
        ///	&quot;ScoreAbove615Monthly&quot;,
        ///	&quot;FuneralAddOn&quot;, 
        ///	&quot;AgeAddOn&quot;, 
        ///	&quot;VAPExcl&quot;, 
        ///	&quot;VAPVAT&quot;,
        ///	&quot;VAPIncl&quot;,
        ///	&quot;TotalAddOn&quot;,
        ///	(&quot;LoanFeeExclVAT&quot; + &quot;FuneralAddOn&quot; + &quot;AgeAddOn&quot; + &quot;VAPExcl&quot;) AS &quot;TotFeeExcl&quot;,
        ///	(&quot; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string QRY_BasicLoanInfo {
            get {
                return ResourceManager.GetString("QRY_BasicLoanInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///SELECT 
        ///  brnum as &quot;LegacyBranchNumber&quot;,
        ///  CASE WHEN payno &gt; 6 AND payno &lt; 12 THEN 6 ELSE payno END as &quot;PayNo&quot;, 
        ///  COUNT(*) as &quot;Quantity&quot;, 
        ///  SUM(cheque) as &quot;Cheque&quot;, 
        ///  SUM(CASE 
        ///   WHEN trdate IS  NUlL THEN 1 
        ///    ELSE 0 
        ///  END) AS &quot;NewClientQuantity&quot;, 
        ///  SUM(CASE 
        ///    WHEN trdate IS  NUlL THEN cheque 
        ///    ELSE 0 
        ///  END) AS &quot;NewClientAmount&quot;, 
        ///  SUM(CASE 
        ///    WHEN trdate IS NOT NUlL 
        ///      AND DATE_PART(&apos;day&apos;, loandate::timestamp - trdate::timestamp) &lt;= 17 THEN 1 
        ///    ELSE 0 
        ///  END) AS  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string QRY_ClientNewVsExistingInfo {
            get {
                return ResourceManager.GetString("QRY_ClientNewVsExistingInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WITH CTE_Arrears AS 
        ///(
        ///	SELECT LN.brnum, MIN(TR.trdate) AS OldestArrearDate
        ///	FROM company.loans LN 
        ///	INNER JOIN company.trans TR ON TR.loan  = LN.loan 
        ///		AND TR.client = LN.client 
        ///		AND TR.brnum = LN.brnum 
        ///		AND TR.order &gt;= 1 
        ///		AND TR.seqno &gt;= 1 
        ///		AND TR.trtype IN (&apos;R&apos;)
        ///	WHERE LN.nctrantype IN (&apos;USE&apos;, &apos;N/A&apos;) -- NUCARD, EFT OR CASH 
        ///		AND LN.brnum IN (&apos;{0}&apos;)
        ///		AND (TR.trdate &lt; date_trunc(&apos;month&apos;, current_date)
        ///				AND TR.trtype IN (&apos;R&apos;)
        ///				AND (NULLIF(TRIM(TR.trstat), &apos;&apos;) IS NULL 
        ///					OR [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string QRY_Collections {
            get {
                return ResourceManager.GetString("QRY_Collections", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT 
        ///  brnum AS &quot;LegacyBranchNumber&quot;,
        ///  CASE 
        ///    WHEN payno &lt; 1 THEN 1
        ///    WHEN payno &gt; 6 AND payno &lt; 12 THEN 6 
        ///    WHEN payno &gt; 12 AND payno &lt; 24 THEN 12 
        ///    WHEN payno &gt; 24 AND payno &lt; 36 THEN 24 
        ///    ELSE payno 
        ///  END AS &quot;PayNo&quot;, 
        ///  SUM(collections) AS &quot;Collections&quot;, 
        ///  SUM(refunds) AS &quot;Refunds&quot; 
        ///FROM ( 
        ///  SELECT 
        ///    CASE 
        ///      WHEN LN.loanmeth = &apos;W&apos; THEN ceiling(payno / 4) 
        ///      WHEN LN.loanmeth = &apos;B&apos; THEN ceiling(payno / 2) 
        ///      WHEN LN.loanmeth = &apos;M&apos; THEN payno 
        ///      ELSE  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string QRY_CollectionsVsRefunds {
            get {
                return ResourceManager.GetString("QRY_CollectionsVsRefunds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT LN.brnum AS &quot;LegacyBranchNumber&quot;, 
        ///	SUM(outamnt) AS &quot;DebtorsBookValue&quot;
        ///FROM company.loans LN 
        ///WHERE LN.brnum IN (&apos;{0}&apos;)
        ///GROUP BY brnum.
        /// </summary>
        internal static string QRY_Debtorsbook {
            get {
                return ResourceManager.GetString("QRY_Debtorsbook", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT TR.brnum AS &quot;LegacyBranchNumber&quot;, 
        ///	SUM(TR.tramount) AS &quot;OverdueValue&quot;, 
        ///	COUNT(DISTINCT (LN.client, LN.loan, LN.brnum)) AS &quot;NoOfLoans&quot; 
        ///FROM company.loans LN 
        ///INNER JOIN company.trans TR ON TR.loan  = LN.loan 
        ///	AND TR.client = LN.client 
        ///	AND TR.brnum = LN.brnum 
        ///	AND TR.order &gt;= 1 
        ///	AND TR.seqno &gt;= 1 
        /// 	AND TR.trtype IN (&apos;R&apos;)
        ///	AND TR.trstat NOT IN (&apos;P&apos;,&apos;E&apos;, &apos;T&apos;)
        ///WHERE 
        ///	LN.nctrantype IN (&apos;USE&apos;, &apos;N/A&apos;, &apos;SIMSALEC&apos;) -- NUCARD, EFT OR CASH 
        ///	AND LN.brnum IN (&apos;{0}&apos;)
        ///	AND NULLIF(TRIM(LN.cla [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string QRY_FlaggedAccounts {
            get {
                return ResourceManager.GetString("QRY_FlaggedAccounts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT DISTINCT CL.recid
        ///FROM company.client CL 
        ///LEFT JOIN company.loans LN ON LN.client = CL.client
        ///	AND LN.brnum = CL.brnum
        ///LEFT JOIN company.trans TR ON LN.loan = TR.loan
        ///	AND LN.client = TR.client
        ///	AND LN.brnum = TR.brnum
        ///	AND TR.trtype = &apos;W&apos;
        ///	AND TR.reason = &apos;09&apos;
        ///WHERE (claimcode = &apos;D&apos; OR 
        ///	TR.trdate IS NOT NULL)
        ///	AND CL.recid IN ({0});
        ///	
        ///
        ///.
        /// </summary>
        internal static string QRY_GetDeceasedClients {
            get {
                return ResourceManager.GetString("QRY_GetDeceasedClients", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT 
        ///	&quot;LegacyBranchNumber&quot;,
        ///	&quot;HandoverDate&quot;,
        ///	&quot;PayNo&quot;, 
        ///	&quot;Quantity&quot;, 
        ///	&quot;Amount&quot;,
        ///	&quot;ClientQuantity&quot;
        ///FROM (
        ///  SELECT 
        ///        brnum AS &quot;LegacyBranchNumber&quot;, hovrdate AS &quot;HandoverDate&quot;,
        ///		CASE WHEN payno &gt; 6 AND payno &lt; 12 THEN 6 ELSE payno END AS &quot;PayNo&quot;, 
        ///		COUNT(*) AS &quot;Quantity&quot;, 
        ///		SUM(hovramt) AS &quot;Amount&quot;
        ///  FROM ( 
        ///    SELECT 
        ///          CASE 
        ///            WHEN loanmeth = &apos;W&apos; THEN ceiling(payno / 4) 
        ///            WHEN loanmeth = &apos;B&apos; THEN ceiling(payno / 2) 
        ///            WHEN loanmeth = &apos;M [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string QRY_HandoverInfo {
            get {
                return ResourceManager.GetString("QRY_HandoverInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT 
        ///	&quot;LegacyBranchNumber&quot;,
        ///	HO.&quot;HandoverDate&quot;,
        ///	&quot;PayNo&quot;, 
        ///	&quot;Quantity&quot;, 
        ///	&quot;Amount&quot;,
        ///	&quot;ClientQuantity&quot;
        ///FROM (
        ///  SELECT 
        ///        brnum AS &quot;LegacyBranchNumber&quot;, hovrdate AS &quot;HandoverDate&quot;,
        ///		CASE WHEN payno &gt; 6 AND payno &lt; 12 THEN 6 ELSE payno END AS &quot;PayNo&quot;, 
        ///		COUNT(*) AS &quot;Quantity&quot;, 
        ///		SUM(hovramt) AS &quot;Amount&quot;
        ///  FROM ( 
        ///    SELECT 
        ///          CASE 
        ///            WHEN loanmeth = &apos;W&apos; THEN ceiling(payno / 4) 
        ///            WHEN loanmeth = &apos;B&apos; THEN ceiling(payno / 2) 
        ///            WHEN loanmeth = [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string QRY_HandoverInfo1 {
            get {
                return ResourceManager.GetString("QRY_HandoverInfo1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT 
        ///	CASE 
        ///		WHEN COUNT(*) &gt; 0 THEN true 
        ///		ELSE false 
        ///	END AS noofenquiries
        ///FROM company.cs_ctrl
        ///WHERE nlrenqref = &apos;{0}&apos;.
        /// </summary>
        internal static string QRY_NLR_CheckIfReferenceExists {
            get {
                return ResourceManager.GetString("QRY_NLR_CheckIfReferenceExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT brnum AS &quot;LegacyBranchNumber&quot;, 
        ///	SUM(PossibleHandOvers) AS &quot;PossibleHandOvers&quot;, 
        ///	SUM(NextPossibleHandOvers) AS &quot;NextPossibleHandOvers&quot;
        ///	FROM 
        ///		(
        ///		SELECT brnum, PossibleHandOvers, NextPossibleHandOvers,
        ///		     RANK() OVER (PARTITION BY client, loan, brnum ORDER BY PossibleHandOvers DESC) AS Rank
        ///		FROM (
        ///		  SELECT DISTINCT TR.client, TR.loan, TR.brnum, 
        ///		    CASE 
        ///		      WHEN trdate IS NOT NUlL 
        ///			AND DATE_PART(&apos;day&apos;, (date_trunc(&apos;month&apos;, current_date) - INTERVAL &apos;1 Day&apos;) - trdate::t [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string QRY_PossibleHandovers {
            get {
                return ResourceManager.GetString("QRY_PossibleHandovers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///WITH CTE_BankChange AS
        ///(
        ///	SELECT LN.loan, LN.client, LN.brnum, PH.bank as currentbank, PH.bankacc as currentbankacc, CB.bank as initialbank, CB.bankacc as initialbankacc
        ///	FROM company.PayplanH PH
        ///	LEFT JOIN company.loans LN ON PH.loan = LN.loan
        ///		AND PH.client = LN.client
        ///		AND PH.brnum = LN.brnum
        ///	LEFT JOIN company.claud CB ON PH.client = CB.client
        ///		AND PH.brnum = CB.brnum
        ///		AND LN.userdate &lt;= CB.date
        ///		AND LN.usertime &lt;= CB.au_time
        ///		AND CB.chg IN (&apos;B&apos;)
        ///		AND NULLIF(TRIM(CB.bank), &apos;&apos;) IS NO [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string QRY_Reswipes {
            get {
                return ResourceManager.GetString("QRY_Reswipes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT TR.brnum AS &quot;LegacyBranchNumber&quot;,
        ///	CASE 
        ///		WHEN loanmeth = &apos;W&apos; THEN ceiling(payno / 4) 
        ///		WHEN loanmeth = &apos;B&apos; THEN ceiling(payno / 2) 
        ///		WHEN loanmeth = &apos;M&apos; THEN payno 
        ///		ELSE 0 
        ///	END as &quot;PayNo&quot;, 
        ///	SUM(TR.tramount) AS &quot;RollbackValue&quot;
        ///FROM company.loans LN 
        ///INNER JOIN company.trans TR ON TR.loan  = LN.loan 
        ///	AND TR.client = LN.client 
        ///	AND TR.brnum = LN.brnum 
        ///	AND TR.order &gt;= 1 
        ///	AND TR.seqno &gt;= 1 
        ///	AND TR.glbank = &apos;ROL&apos;
        ///WHERE LN.nctrantype IN (&apos;USE&apos;, &apos;N/A&apos;) -- NUCARD, EFT OR CASH 
        ///	A [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string QRY_RolledAccounts {
            get {
                return ResourceManager.GetString("QRY_RolledAccounts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT LN.client, LN.loan, LN.brnum as LegacyBranchNumber, LN.status,
        ///	CASE 
        ///		WHEN LN.status = &apos;H&apos; THEN &apos;Handover&apos;
        ///		WHEN LN.status = &apos;E&apos; THEN &apos;Early Settlement&apos;
        ///		WHEN LN.status = &apos;N&apos; THEN &apos;Newly created loan&apos;
        ///		WHEN LN.status = &apos;C&apos; THEN &apos;Cancelled&apos;
        ///		WHEN LN.status = &apos;W&apos; THEN &apos;Write Off&apos;
        ///		WHEN LN.status = &apos;J&apos; THEN &apos;Journalised&apos;
        ///		WHEN LN.status = &apos;D&apos; THEN &apos;Discounted&apos;
        ///		WHEN LN.status = &apos;F&apos; THEN &apos;Finished/Closed&apos;
        ///		WHEN LN.status = &apos;P&apos; THEN &apos;Part Paid&apos;
        ///		ELSE &apos;Unknown&apos;
        ///	END AS statusdescript [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string QRY_STR_CheckAccounBalanceToClose {
            get {
                return ResourceManager.GetString("QRY_STR_CheckAccounBalanceToClose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT DISTINCT CL.recid
        ///FROM company.client CL
        ///LEFT JOIN company.loans LN ON CL.client = LN.client
        ///	AND CL.brnum = LN.brnum 
        ///WHERE CL.recid IN ({0})
        ///	AND LN.loandate &gt; CURRENT_DATE - INTERVAL &apos;12 months&apos;
        ///	AND LN.status = &apos;H&apos;.
        /// </summary>
        internal static string QRY_STR_ClientsHandedOver {
            get {
                return ResourceManager.GetString("QRY_STR_ClientsHandedOver", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT DISTINCT LN.recid as loanreference, LN.oper as OperatorCode, CL.recid as clientreference, LN.client, LN.loan, LN.brnum as LegacyBranchNumber, LN.loandate, 
        ///	LN.enddate, LN.cheque, LN.outamnt as OutstandingAmount, CL.surname, CL.firstname, CL.othname as OtherName, CL.title, CL.identno as IdentityNo, 
        ///		CL.hometel, CL.worktel, CL.workfax, CL.spwrktel as SpouseWorkTel, CL.cell, CL.email_addr as Email, 
        ///		CL.haddr1 as ResidentialAddress1, CL.haddr2 as ResidentialAddress2, CL.haddr3 as ResidentialAddre [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string QRY_STR_ClientsTookNewerLoan {
            get {
                return ResourceManager.GetString("QRY_STR_ClientsTookNewerLoan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 	SELECT DISTINCT LN.recid as loanreference, LN.oper as OperatorCode, CL.recid as clientreference, LN.client, LN.loan, LN.brnum as LegacyBranchNumber, LN.loandate, LN.enddate, LN.cheque, LN.outamnt as OutstandingAmount, 
        ///		CL.surname, CL.firstname, CL.othname as OtherName, CL.title, CL.identno as IdentityNo, CL.hometel, CL.worktel, CL.workfax, CL.spwrktel as SpouseWorkTel, CL.cell, CL.email_addr as Email, 
        ///		CL.haddr1 as ResidentialAddress1, CL.haddr2 as ResidentialAddress2, CL.haddr3 as ResidentialAddress [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string QRY_STR_ImportAccount {
            get {
                return ResourceManager.GetString("QRY_STR_ImportAccount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT LN.recid as loanreference, 
        ///	TR.tramount as Amount, TR.order, TR.seqno, TR.trdate as TransactionDate, TR.trtype as TransactionType, TR.trstat as TranasctionStatus, TR.statdate as StatusDate
        ///FROM company.loans LN
        ///INNER JOIN company.trans TR ON LN.loan = TR.loan 
        ///	AND LN.client = TR.client
        ///	AND LN.brnum = TR.brnum
        ///	AND TR.tramount &gt; 0
        ///WHERE TR.trdate &gt;= CURRENT_DATE - INTERVAL &apos;{1} Days&apos;
        ///	AND LN.recid IN ({0})
        ///	AND TR.trtype IN (&apos;P&apos;)
        ///	AND TR.trstat IS NULL.
        /// </summary>
        internal static string QRY_STR_ImportAccountPayments {
            get {
                return ResourceManager.GetString("QRY_STR_ImportAccountPayments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT LN.recid as loanreference, TR.recid AS transactionreference,
        ///	TR.tramount as Amount, TR.order, TR.seqno, TR.trdate as TransactionDate, TR.trtype as TransactionType, TR.trstat as TranasctionStatus, TR.statdate as StatusDate, TR.backupdate
        ///FROM company.loans LN
        ///INNER JOIN company.trans TR ON LN.loan = TR.loan 
        ///	AND LN.client = TR.client
        ///	AND LN.brnum = TR.brnum
        ///	AND TR.tramount != 0
        ///WHERE LN.recid IN ({0})
        ///	AND 
        ///	TR.backupdate &gt; &apos;{1}&apos;.
        /// </summary>
        internal static string QRY_STR_ImportAccountTransactions {
            get {
                return ResourceManager.GetString("QRY_STR_ImportAccountTransactions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT DISTINCT LN.recid as loanreference, LN.oper as OperatorCode, CL.recid as clientreference, LN.client, LN.loan, LN.brnum as LegacyBranchNumber, LN.loandate, 
        ///	COALESCE(MAX(PD.trdate), LN.enddate) AS enddate, 
        ///	LN.cheque, LN.outamnt as OutstandingAmount, CL.surname, CL.firstname, CL.othname as OtherName, CL.title, CL.identno as IdentityNo, 
        ///		CL.hometel, CL.worktel, CL.workfax, CL.spwrktel as SpouseWorkTel, CL.cell, CL.email_addr as Email, 
        ///		CL.haddr1 as ResidentialAddress1, CL.haddr2 as Residentia [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string QRY_STR_ImportPromononexistant {
            get {
                return ResourceManager.GetString("QRY_STR_ImportPromononexistant", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT *
        ///FROM (
        ///	SELECT DISTINCT LN.recid as loanreference, LN.oper as OperatorCode, CL.recid as clientreference, LN.client, LN.loan, LN.brnum as LegacyBranchNumber, LN.loandate, 
        ///	SL.enddate, LN.cheque, LN.outamnt as OutstandingAmount, CL.surname, CL.firstname, CL.othname as OtherName, CL.title, CL.identno as IdentityNo, 
        ///		CL.hometel, CL.worktel, CL.workfax, CL.spwrktel as SpouseWorkTel, CL.cell, CL.email_addr as Email, 
        ///		CL.haddr1 as ResidentialAddress1, CL.haddr2 as ResidentialAddress2, CL.haddr3  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string QRY_STR_ImportSales {
            get {
                return ResourceManager.GetString("QRY_STR_ImportSales", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///WITH CTE_VAP AS
        ///(
        ///	SELECT brnum, CASE WHEN payno &gt; 6 AND payno &lt; 12 THEN 6 ELSE payno END AS payno, SUM(cheque) AS VapLinkedLoansValue, COUNT(*) AS quantity
        ///	FROM (
        ///	SELECT LN.brnum,
        ///		CASE 
        ///			WHEN LN.loanmeth = &apos;W&apos; THEN ceiling(LN.payno / 4) 
        ///			WHEN LN.loanmeth = &apos;B&apos; THEN ceiling(LN.payno / 2) 
        ///			WHEN LN.loanmeth = &apos;M&apos; THEN LN.payno 
        ///		ELSE 0 END as payno, LN.cheque
        ///	FROM company.loans LN
        ///	INNER JOIN company.trans TR ON LN.loan = TR.loan
        ///		AND LN.brnum = TR.brnum
        ///		AND LN.client = TR.clie [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string QRY_Vap {
            get {
                return ResourceManager.GetString("QRY_Vap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT LN.client, LN.loan, LN.brnum as LegacyBranchNumber, LN.status,
        ///	CASE 
        ///		WHEN LN.status = &apos;H&apos; THEN &apos;Handover&apos;
        ///		WHEN LN.status = &apos;E&apos; THEN &apos;Early Settlement&apos;
        ///		WHEN LN.status = &apos;N&apos; THEN &apos;Newly created loan&apos;
        ///		WHEN LN.status = &apos;C&apos; THEN &apos;Cancelled&apos;
        ///		WHEN LN.status = &apos;W&apos; THEN &apos;Write Off&apos;
        ///		WHEN LN.status = &apos;J&apos; THEN &apos;Journalised&apos;
        ///		WHEN LN.status = &apos;D&apos; THEN &apos;Discounted&apos;
        ///		WHEN LN.status = &apos;F&apos; THEN &apos;Finished/Closed&apos;
        ///		WHEN LN.status = &apos;P&apos; THEN &apos;Part Paid&apos;
        ///		ELSE &apos;Unknown&apos;
        ///	END AS statusdescript [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string STR_GetHandedoverCases {
            get {
                return ResourceManager.GetString("STR_GetHandedoverCases", resourceCulture);
            }
        }
    }
}
