//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Atlas.Business.StockServer {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SourceRequest", Namespace="http://schemas.datacontract.org/2004/07/AtlasServer.WCF.Interface")]
    [System.SerializableAttribute()]
    public partial class SourceRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdminIDOrPassportField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AppNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AppVerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BranchCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommOptions1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommOptions2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FingerprintFingerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FingerprintTemplateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime MachineDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MachineIPAddressesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MachineNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MachineUniqueIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OptionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDOrPassportField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdminIDOrPassport {
            get {
                return this.AdminIDOrPassportField;
            }
            set {
                if ((object.ReferenceEquals(this.AdminIDOrPassportField, value) != true)) {
                    this.AdminIDOrPassportField = value;
                    this.RaisePropertyChanged("AdminIDOrPassport");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AppName {
            get {
                return this.AppNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AppNameField, value) != true)) {
                    this.AppNameField = value;
                    this.RaisePropertyChanged("AppName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AppVer {
            get {
                return this.AppVerField;
            }
            set {
                if ((object.ReferenceEquals(this.AppVerField, value) != true)) {
                    this.AppVerField = value;
                    this.RaisePropertyChanged("AppVer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BranchCode {
            get {
                return this.BranchCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.BranchCodeField, value) != true)) {
                    this.BranchCodeField = value;
                    this.RaisePropertyChanged("BranchCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommOptions1 {
            get {
                return this.CommOptions1Field;
            }
            set {
                if ((object.ReferenceEquals(this.CommOptions1Field, value) != true)) {
                    this.CommOptions1Field = value;
                    this.RaisePropertyChanged("CommOptions1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommOptions2 {
            get {
                return this.CommOptions2Field;
            }
            set {
                if ((object.ReferenceEquals(this.CommOptions2Field, value) != true)) {
                    this.CommOptions2Field = value;
                    this.RaisePropertyChanged("CommOptions2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FingerprintFinger {
            get {
                return this.FingerprintFingerField;
            }
            set {
                if ((this.FingerprintFingerField.Equals(value) != true)) {
                    this.FingerprintFingerField = value;
                    this.RaisePropertyChanged("FingerprintFinger");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FingerprintTemplate {
            get {
                return this.FingerprintTemplateField;
            }
            set {
                if ((object.ReferenceEquals(this.FingerprintTemplateField, value) != true)) {
                    this.FingerprintTemplateField = value;
                    this.RaisePropertyChanged("FingerprintTemplate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime MachineDateTime {
            get {
                return this.MachineDateTimeField;
            }
            set {
                if ((this.MachineDateTimeField.Equals(value) != true)) {
                    this.MachineDateTimeField = value;
                    this.RaisePropertyChanged("MachineDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MachineIPAddresses {
            get {
                return this.MachineIPAddressesField;
            }
            set {
                if ((object.ReferenceEquals(this.MachineIPAddressesField, value) != true)) {
                    this.MachineIPAddressesField = value;
                    this.RaisePropertyChanged("MachineIPAddresses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MachineName {
            get {
                return this.MachineNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MachineNameField, value) != true)) {
                    this.MachineNameField = value;
                    this.RaisePropertyChanged("MachineName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MachineUniqueID {
            get {
                return this.MachineUniqueIDField;
            }
            set {
                if ((object.ReferenceEquals(this.MachineUniqueIDField, value) != true)) {
                    this.MachineUniqueIDField = value;
                    this.RaisePropertyChanged("MachineUniqueID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Options {
            get {
                return this.OptionsField;
            }
            set {
                if ((object.ReferenceEquals(this.OptionsField, value) != true)) {
                    this.OptionsField = value;
                    this.RaisePropertyChanged("Options");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserIDOrPassport {
            get {
                return this.UserIDOrPassportField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDOrPassportField, value) != true)) {
                    this.UserIDOrPassportField = value;
                    this.RaisePropertyChanged("UserIDOrPassport");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="StockServer.IStockServer")]
    public interface IStockServer {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockServer/AllocateProduct", ReplyAction="http://tempuri.org/IStockServer/AllocateProductResponse")]
        int AllocateProduct(out string errorMessage, Atlas.Business.StockServer.SourceRequest sourceRequest, int productId, int personId, int allocatingPersonId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStockServerChannel : Atlas.Business.StockServer.IStockServer, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StockServerClient : System.ServiceModel.ClientBase<Atlas.Business.StockServer.IStockServer>, Atlas.Business.StockServer.IStockServer {
        
        public StockServerClient() {
        }
        
        public StockServerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StockServerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StockServerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StockServerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int AllocateProduct(out string errorMessage, Atlas.Business.StockServer.SourceRequest sourceRequest, int productId, int personId, int allocatingPersonId) {
            return base.Channel.AllocateProduct(out errorMessage, sourceRequest, productId, personId, allocatingPersonId);
        }
    }
}
