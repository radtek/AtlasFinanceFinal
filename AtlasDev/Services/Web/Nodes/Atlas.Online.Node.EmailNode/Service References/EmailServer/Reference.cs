//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Atlas.Online.Node.EmailNode.EmailServer {
    using System.Runtime.Serialization;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Priority", Namespace="http://schemas.datacontract.org/2004/07/Atlas.EmailServer.WCF.Interface")]
    public enum Priority : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        High = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Low = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Normal = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Enumerators.EmailMessageType", Namespace="http://schemas.datacontract.org/2004/07/Atlas")]
    public enum EnumeratorsEmailMessageType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Standard = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Statement = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Payment_Due = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Overdue = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Legal_Notice = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EmailServer.IEmailServer")]
    public interface IEmailServer {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmailServer/Send", ReplyAction="http://tempuri.org/IEmailServer/SendResponse")]
        void Send(string fromEmail, string toEmail, string subject, string message, bool isHTML, Atlas.Online.Node.EmailNode.EmailServer.Priority priority, Atlas.Online.Node.EmailNode.EmailServer.EnumeratorsEmailMessageType emailType, System.Nullable<System.DateTime> actionDate, bool isActionDateTriggered);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmailServer/Send", ReplyAction="http://tempuri.org/IEmailServer/SendResponse")]
        System.Threading.Tasks.Task SendAsync(string fromEmail, string toEmail, string subject, string message, bool isHTML, Atlas.Online.Node.EmailNode.EmailServer.Priority priority, Atlas.Online.Node.EmailNode.EmailServer.EnumeratorsEmailMessageType emailType, System.Nullable<System.DateTime> actionDate, bool isActionDateTriggered);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEmailServerChannel : Atlas.Online.Node.EmailNode.EmailServer.IEmailServer, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmailServerClient : System.ServiceModel.ClientBase<Atlas.Online.Node.EmailNode.EmailServer.IEmailServer>, Atlas.Online.Node.EmailNode.EmailServer.IEmailServer {
        
        public EmailServerClient() {
        }
        
        public EmailServerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EmailServerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmailServerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmailServerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Send(string fromEmail, string toEmail, string subject, string message, bool isHTML, Atlas.Online.Node.EmailNode.EmailServer.Priority priority, Atlas.Online.Node.EmailNode.EmailServer.EnumeratorsEmailMessageType emailType, System.Nullable<System.DateTime> actionDate, bool isActionDateTriggered) {
            base.Channel.Send(fromEmail, toEmail, subject, message, isHTML, priority, emailType, actionDate, isActionDateTriggered);
        }
        
        public System.Threading.Tasks.Task SendAsync(string fromEmail, string toEmail, string subject, string message, bool isHTML, Atlas.Online.Node.EmailNode.EmailServer.Priority priority, Atlas.Online.Node.EmailNode.EmailServer.EnumeratorsEmailMessageType emailType, System.Nullable<System.DateTime> actionDate, bool isActionDateTriggered) {
            return base.Channel.SendAsync(fromEmail, toEmail, subject, message, isHTML, priority, emailType, actionDate, isActionDateTriggered);
        }
    }
}
