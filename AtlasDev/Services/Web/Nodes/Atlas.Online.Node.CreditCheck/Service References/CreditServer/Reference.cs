//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Atlas.Online.Node.CreditNode.CreditServer {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CreditServer.ICreditServer")]
    public interface ICreditServer {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICreditServer/QueueEnquiry", ReplyAction="http://tempuri.org/ICreditServer/QueueEnquiryResponse")]
        Atlas.Online.Node.CreditNode.CreditServer.QueueEnquiryResponse QueueEnquiry(Atlas.Online.Node.CreditNode.CreditServer.QueueEnquiryRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICreditServer/QueueEnquiry", ReplyAction="http://tempuri.org/ICreditServer/QueueEnquiryResponse")]
        System.Threading.Tasks.Task<Atlas.Online.Node.CreditNode.CreditServer.QueueEnquiryResponse> QueueEnquiryAsync(Atlas.Online.Node.CreditNode.CreditServer.QueueEnquiryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICreditServer/Enquiry", ReplyAction="http://tempuri.org/ICreditServer/EnquiryResponse")]
        Atlas.RabbitMQ.Messages.Credit.CreditResponse Enquiry(
                    long accountId, 
                    string firstName, 
                    string surname, 
                    string IdNumber, 
                    string gender, 
                    System.DateTime dateOfBirth, 
                    string addressLine1, 
                    string addressLine2, 
                    string addressLine3, 
                    string addressLine4, 
                    string postalCode, 
                    string homeTelCode, 
                    string homeTelNo, 
                    string workTelCode, 
                    string workTelNo, 
                    string cellNo, 
                    bool isIDPassportNo, 
                    bool isExistingClient, 
                    string requestUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICreditServer/Enquiry", ReplyAction="http://tempuri.org/ICreditServer/EnquiryResponse")]
        System.Threading.Tasks.Task<Atlas.RabbitMQ.Messages.Credit.CreditResponse> EnquiryAsync(
                    long accountId, 
                    string firstName, 
                    string surname, 
                    string IdNumber, 
                    string gender, 
                    System.DateTime dateOfBirth, 
                    string addressLine1, 
                    string addressLine2, 
                    string addressLine3, 
                    string addressLine4, 
                    string postalCode, 
                    string homeTelCode, 
                    string homeTelNo, 
                    string workTelCode, 
                    string workTelNo, 
                    string cellNo, 
                    bool isIDPassportNo, 
                    bool isExistingClient, 
                    string requestUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICreditServer/GetReport", ReplyAction="http://tempuri.org/ICreditServer/GetReportResponse")]
        string GetReport(long enquiryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICreditServer/GetReport", ReplyAction="http://tempuri.org/ICreditServer/GetReportResponse")]
        System.Threading.Tasks.Task<string> GetReportAsync(long enquiryId);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="QueueEnquiry", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class QueueEnquiryRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string legacyBranchNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string firstName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string surname;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string IdNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string gender;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public System.DateTime dateOfBirth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public string addressLine1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        public string addressLine2;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=8)]
        public string addressLine3;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=9)]
        public string addressLine4;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=10)]
        public string postalCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=11)]
        public string homeTelCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=12)]
        public string homeTelNo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=13)]
        public string workTelCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=14)]
        public string workTelNo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=15)]
        public string cellNo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=16)]
        public bool isIDPassportNo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=17)]
        public bool isExistingClient;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=18)]
        public string requestUser;
        
        public QueueEnquiryRequest() {
        }
        
        public QueueEnquiryRequest(
                    string legacyBranchNum, 
                    string firstName, 
                    string surname, 
                    string IdNumber, 
                    string gender, 
                    System.DateTime dateOfBirth, 
                    string addressLine1, 
                    string addressLine2, 
                    string addressLine3, 
                    string addressLine4, 
                    string postalCode, 
                    string homeTelCode, 
                    string homeTelNo, 
                    string workTelCode, 
                    string workTelNo, 
                    string cellNo, 
                    bool isIDPassportNo, 
                    bool isExistingClient, 
                    string requestUser) {
            this.legacyBranchNum = legacyBranchNum;
            this.firstName = firstName;
            this.surname = surname;
            this.IdNumber = IdNumber;
            this.gender = gender;
            this.dateOfBirth = dateOfBirth;
            this.addressLine1 = addressLine1;
            this.addressLine2 = addressLine2;
            this.addressLine3 = addressLine3;
            this.addressLine4 = addressLine4;
            this.postalCode = postalCode;
            this.homeTelCode = homeTelCode;
            this.homeTelNo = homeTelNo;
            this.workTelCode = workTelCode;
            this.workTelNo = workTelNo;
            this.cellNo = cellNo;
            this.isIDPassportNo = isIDPassportNo;
            this.isExistingClient = isExistingClient;
            this.requestUser = requestUser;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="QueueEnquiryResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class QueueEnquiryResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public decimal totalCPAAccount;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public decimal totalNLRAccount;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string nlrEnquiryNo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string enquiryDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public int score;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public string riskType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public System.Collections.Generic.List<string> reasons;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        public string file;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=8)]
        public System.Collections.Generic.List<Atlas.RabbitMQ.Messages.Credit.Product> products;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=9)]
        public System.Collections.Generic.List<Atlas.RabbitMQ.Messages.Credit.NLRCPAAccount> accounts;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=10)]
        public System.Collections.Generic.List<string> errors;
        
        public QueueEnquiryResponse() {
        }
        
        public QueueEnquiryResponse(decimal totalCPAAccount, decimal totalNLRAccount, string nlrEnquiryNo, string enquiryDate, int score, string riskType, System.Collections.Generic.List<string> reasons, string file, System.Collections.Generic.List<Atlas.RabbitMQ.Messages.Credit.Product> products, System.Collections.Generic.List<Atlas.RabbitMQ.Messages.Credit.NLRCPAAccount> accounts, System.Collections.Generic.List<string> errors) {
            this.totalCPAAccount = totalCPAAccount;
            this.totalNLRAccount = totalNLRAccount;
            this.nlrEnquiryNo = nlrEnquiryNo;
            this.enquiryDate = enquiryDate;
            this.score = score;
            this.riskType = riskType;
            this.reasons = reasons;
            this.file = file;
            this.products = products;
            this.accounts = accounts;
            this.errors = errors;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICreditServerChannel : Atlas.Online.Node.CreditNode.CreditServer.ICreditServer, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreditServerClient : System.ServiceModel.ClientBase<Atlas.Online.Node.CreditNode.CreditServer.ICreditServer>, Atlas.Online.Node.CreditNode.CreditServer.ICreditServer {
        
        public CreditServerClient() {
        }
        
        public CreditServerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CreditServerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CreditServerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CreditServerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Atlas.Online.Node.CreditNode.CreditServer.QueueEnquiryResponse Atlas.Online.Node.CreditNode.CreditServer.ICreditServer.QueueEnquiry(Atlas.Online.Node.CreditNode.CreditServer.QueueEnquiryRequest request) {
            return base.Channel.QueueEnquiry(request);
        }
        
        public decimal QueueEnquiry(
                    string legacyBranchNum, 
                    string firstName, 
                    string surname, 
                    string IdNumber, 
                    string gender, 
                    System.DateTime dateOfBirth, 
                    string addressLine1, 
                    string addressLine2, 
                    string addressLine3, 
                    string addressLine4, 
                    string postalCode, 
                    string homeTelCode, 
                    string homeTelNo, 
                    string workTelCode, 
                    string workTelNo, 
                    string cellNo, 
                    bool isIDPassportNo, 
                    bool isExistingClient, 
                    string requestUser, 
                    out decimal totalNLRAccount, 
                    out string nlrEnquiryNo, 
                    out string enquiryDate, 
                    out int score, 
                    out string riskType, 
                    out System.Collections.Generic.List<string> reasons, 
                    out string file, 
                    out System.Collections.Generic.List<Atlas.RabbitMQ.Messages.Credit.Product> products, 
                    out System.Collections.Generic.List<Atlas.RabbitMQ.Messages.Credit.NLRCPAAccount> accounts, 
                    out System.Collections.Generic.List<string> errors) {
            Atlas.Online.Node.CreditNode.CreditServer.QueueEnquiryRequest inValue = new Atlas.Online.Node.CreditNode.CreditServer.QueueEnquiryRequest();
            inValue.legacyBranchNum = legacyBranchNum;
            inValue.firstName = firstName;
            inValue.surname = surname;
            inValue.IdNumber = IdNumber;
            inValue.gender = gender;
            inValue.dateOfBirth = dateOfBirth;
            inValue.addressLine1 = addressLine1;
            inValue.addressLine2 = addressLine2;
            inValue.addressLine3 = addressLine3;
            inValue.addressLine4 = addressLine4;
            inValue.postalCode = postalCode;
            inValue.homeTelCode = homeTelCode;
            inValue.homeTelNo = homeTelNo;
            inValue.workTelCode = workTelCode;
            inValue.workTelNo = workTelNo;
            inValue.cellNo = cellNo;
            inValue.isIDPassportNo = isIDPassportNo;
            inValue.isExistingClient = isExistingClient;
            inValue.requestUser = requestUser;
            Atlas.Online.Node.CreditNode.CreditServer.QueueEnquiryResponse retVal = ((Atlas.Online.Node.CreditNode.CreditServer.ICreditServer)(this)).QueueEnquiry(inValue);
            totalNLRAccount = retVal.totalNLRAccount;
            nlrEnquiryNo = retVal.nlrEnquiryNo;
            enquiryDate = retVal.enquiryDate;
            score = retVal.score;
            riskType = retVal.riskType;
            reasons = retVal.reasons;
            file = retVal.file;
            products = retVal.products;
            accounts = retVal.accounts;
            errors = retVal.errors;
            return retVal.totalCPAAccount;
        }
        
        public System.Threading.Tasks.Task<Atlas.Online.Node.CreditNode.CreditServer.QueueEnquiryResponse> QueueEnquiryAsync(Atlas.Online.Node.CreditNode.CreditServer.QueueEnquiryRequest request) {
            return base.Channel.QueueEnquiryAsync(request);
        }
        
        public Atlas.RabbitMQ.Messages.Credit.CreditResponse Enquiry(
                    long accountId, 
                    string firstName, 
                    string surname, 
                    string IdNumber, 
                    string gender, 
                    System.DateTime dateOfBirth, 
                    string addressLine1, 
                    string addressLine2, 
                    string addressLine3, 
                    string addressLine4, 
                    string postalCode, 
                    string homeTelCode, 
                    string homeTelNo, 
                    string workTelCode, 
                    string workTelNo, 
                    string cellNo, 
                    bool isIDPassportNo, 
                    bool isExistingClient, 
                    string requestUser) {
            return base.Channel.Enquiry(accountId, firstName, surname, IdNumber, gender, dateOfBirth, addressLine1, addressLine2, addressLine3, addressLine4, postalCode, homeTelCode, homeTelNo, workTelCode, workTelNo, cellNo, isIDPassportNo, isExistingClient, requestUser);
        }
        
        public System.Threading.Tasks.Task<Atlas.RabbitMQ.Messages.Credit.CreditResponse> EnquiryAsync(
                    long accountId, 
                    string firstName, 
                    string surname, 
                    string IdNumber, 
                    string gender, 
                    System.DateTime dateOfBirth, 
                    string addressLine1, 
                    string addressLine2, 
                    string addressLine3, 
                    string addressLine4, 
                    string postalCode, 
                    string homeTelCode, 
                    string homeTelNo, 
                    string workTelCode, 
                    string workTelNo, 
                    string cellNo, 
                    bool isIDPassportNo, 
                    bool isExistingClient, 
                    string requestUser) {
            return base.Channel.EnquiryAsync(accountId, firstName, surname, IdNumber, gender, dateOfBirth, addressLine1, addressLine2, addressLine3, addressLine4, postalCode, homeTelCode, homeTelNo, workTelCode, workTelNo, cellNo, isIDPassportNo, isExistingClient, requestUser);
        }
        
        public string GetReport(long enquiryId) {
            return base.Channel.GetReport(enquiryId);
        }
        
        public System.Threading.Tasks.Task<string> GetReportAsync(long enquiryId) {
            return base.Channel.GetReportAsync(enquiryId);
        }
    }
}
