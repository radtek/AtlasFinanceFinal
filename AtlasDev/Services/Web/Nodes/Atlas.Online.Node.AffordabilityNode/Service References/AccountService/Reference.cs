//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Atlas.Online.Node.AffordabilityNode.AccountService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AccountService.IAccountServer")]
    public interface IAccountServer {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServer/GetActiveAccount", ReplyAction="http://tempuri.org/IAccountServer/GetActiveAccountResponse")]
        Atlas.Online.Node.AffordabilityNode.AccountService.GetActiveAccountResponse GetActiveAccount(Atlas.Online.Node.AffordabilityNode.AccountService.GetActiveAccountRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServer/GetActiveAccount", ReplyAction="http://tempuri.org/IAccountServer/GetActiveAccountResponse")]
        System.Threading.Tasks.Task<Atlas.Online.Node.AffordabilityNode.AccountService.GetActiveAccountResponse> GetActiveAccountAsync(Atlas.Online.Node.AffordabilityNode.AccountService.GetActiveAccountRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServer/GetAccountInfo", ReplyAction="http://tempuri.org/IAccountServer/GetAccountInfoResponse")]
        Atlas.Online.Node.AffordabilityNode.AccountService.GetAccountInfoResponse GetAccountInfo(Atlas.Online.Node.AffordabilityNode.AccountService.GetAccountInfoRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServer/GetAccountInfo", ReplyAction="http://tempuri.org/IAccountServer/GetAccountInfoResponse")]
        System.Threading.Tasks.Task<Atlas.Online.Node.AffordabilityNode.AccountService.GetAccountInfoResponse> GetAccountInfoAsync(Atlas.Online.Node.AffordabilityNode.AccountService.GetAccountInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServer/GetAllAccounts", ReplyAction="http://tempuri.org/IAccountServer/GetAllAccountsResponse")]
        Atlas.Online.Node.AffordabilityNode.AccountService.GetAllAccountsResponse GetAllAccounts(Atlas.Online.Node.AffordabilityNode.AccountService.GetAllAccountsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServer/GetAllAccounts", ReplyAction="http://tempuri.org/IAccountServer/GetAllAccountsResponse")]
        System.Threading.Tasks.Task<Atlas.Online.Node.AffordabilityNode.AccountService.GetAllAccountsResponse> GetAllAccountsAsync(Atlas.Online.Node.AffordabilityNode.AccountService.GetAllAccountsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServer/GetActiveBankDetail", ReplyAction="http://tempuri.org/IAccountServer/GetActiveBankDetailResponse")]
        Atlas.Online.Node.AffordabilityNode.AccountService.GetActiveBankDetailResponse GetActiveBankDetail(Atlas.Online.Node.AffordabilityNode.AccountService.GetActiveBankDetailRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServer/GetActiveBankDetail", ReplyAction="http://tempuri.org/IAccountServer/GetActiveBankDetailResponse")]
        System.Threading.Tasks.Task<Atlas.Online.Node.AffordabilityNode.AccountService.GetActiveBankDetailResponse> GetActiveBankDetailAsync(Atlas.Online.Node.AffordabilityNode.AccountService.GetActiveBankDetailRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServer/GetPendingAVS", ReplyAction="http://tempuri.org/IAccountServer/GetPendingAVSResponse")]
        Atlas.Online.Node.AffordabilityNode.AccountService.GetPendingAVSResponse GetPendingAVS(Atlas.Online.Node.AffordabilityNode.AccountService.GetPendingAVSRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServer/GetPendingAVS", ReplyAction="http://tempuri.org/IAccountServer/GetPendingAVSResponse")]
        System.Threading.Tasks.Task<Atlas.Online.Node.AffordabilityNode.AccountService.GetPendingAVSResponse> GetPendingAVSAsync(Atlas.Online.Node.AffordabilityNode.AccountService.GetPendingAVSRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServer/GetStatement", ReplyAction="http://tempuri.org/IAccountServer/GetStatementResponse")]
        Atlas.Domain.Structures.AccountStatement GetStatement(long accountId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServer/GetStatement", ReplyAction="http://tempuri.org/IAccountServer/GetStatementResponse")]
        System.Threading.Tasks.Task<Atlas.Domain.Structures.AccountStatement> GetStatementAsync(long accountId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServer/GetAVSFailureCount", ReplyAction="http://tempuri.org/IAccountServer/GetAVSFailureCountResponse")]
        int GetAVSFailureCount(long personId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServer/GetAVSFailureCount", ReplyAction="http://tempuri.org/IAccountServer/GetAVSFailureCountResponse")]
        System.Threading.Tasks.Task<int> GetAVSFailureCountAsync(long personId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServer/GetAffordabilityOption", ReplyAction="http://tempuri.org/IAccountServer/GetAffordabilityOptionResponse")]
        Atlas.Online.Node.AffordabilityNode.AccountService.GetAffordabilityOptionResponse GetAffordabilityOption(Atlas.Online.Node.AffordabilityNode.AccountService.GetAffordabilityOptionRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServer/GetAffordabilityOption", ReplyAction="http://tempuri.org/IAccountServer/GetAffordabilityOptionResponse")]
        System.Threading.Tasks.Task<Atlas.Online.Node.AffordabilityNode.AccountService.GetAffordabilityOptionResponse> GetAffordabilityOptionAsync(Atlas.Online.Node.AffordabilityNode.AccountService.GetAffordabilityOptionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServer/AcceptAffordabilityOption", ReplyAction="http://tempuri.org/IAccountServer/AcceptAffordabilityOptionResponse")]
        Atlas.Online.Node.AffordabilityNode.AccountService.AcceptAffordabilityOptionResponse AcceptAffordabilityOption(Atlas.Online.Node.AffordabilityNode.AccountService.AcceptAffordabilityOptionRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServer/AcceptAffordabilityOption", ReplyAction="http://tempuri.org/IAccountServer/AcceptAffordabilityOptionResponse")]
        System.Threading.Tasks.Task<Atlas.Online.Node.AffordabilityNode.AccountService.AcceptAffordabilityOptionResponse> AcceptAffordabilityOptionAsync(Atlas.Online.Node.AffordabilityNode.AccountService.AcceptAffordabilityOptionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServer/RejectAffordabilityOption", ReplyAction="http://tempuri.org/IAccountServer/RejectAffordabilityOptionResponse")]
        Atlas.Online.Node.AffordabilityNode.AccountService.RejectAffordabilityOptionResponse RejectAffordabilityOption(Atlas.Online.Node.AffordabilityNode.AccountService.RejectAffordabilityOptionRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServer/RejectAffordabilityOption", ReplyAction="http://tempuri.org/IAccountServer/RejectAffordabilityOptionResponse")]
        System.Threading.Tasks.Task<Atlas.Online.Node.AffordabilityNode.AccountService.RejectAffordabilityOptionResponse> RejectAffordabilityOptionAsync(Atlas.Online.Node.AffordabilityNode.AccountService.RejectAffordabilityOptionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServer/GetQuote", ReplyAction="http://tempuri.org/IAccountServer/GetQuoteResponse")]
        Atlas.Online.Node.AffordabilityNode.AccountService.GetQuoteResponse GetQuote(Atlas.Online.Node.AffordabilityNode.AccountService.GetQuoteRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServer/GetQuote", ReplyAction="http://tempuri.org/IAccountServer/GetQuoteResponse")]
        System.Threading.Tasks.Task<Atlas.Online.Node.AffordabilityNode.AccountService.GetQuoteResponse> GetQuoteAsync(Atlas.Online.Node.AffordabilityNode.AccountService.GetQuoteRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServer/AcceptQuote", ReplyAction="http://tempuri.org/IAccountServer/AcceptQuoteResponse")]
        Atlas.Online.Node.AffordabilityNode.AccountService.AcceptQuoteResponse AcceptQuote(Atlas.Online.Node.AffordabilityNode.AccountService.AcceptQuoteRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServer/AcceptQuote", ReplyAction="http://tempuri.org/IAccountServer/AcceptQuoteResponse")]
        System.Threading.Tasks.Task<Atlas.Online.Node.AffordabilityNode.AccountService.AcceptQuoteResponse> AcceptQuoteAsync(Atlas.Online.Node.AffordabilityNode.AccountService.AcceptQuoteRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServer/RejectQuote", ReplyAction="http://tempuri.org/IAccountServer/RejectQuoteResponse")]
        Atlas.Online.Node.AffordabilityNode.AccountService.RejectQuoteResponse RejectQuote(Atlas.Online.Node.AffordabilityNode.AccountService.RejectQuoteRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServer/RejectQuote", ReplyAction="http://tempuri.org/IAccountServer/RejectQuoteResponse")]
        System.Threading.Tasks.Task<Atlas.Online.Node.AffordabilityNode.AccountService.RejectQuoteResponse> RejectQuoteAsync(Atlas.Online.Node.AffordabilityNode.AccountService.RejectQuoteRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServer/GetSettlementAmount", ReplyAction="http://tempuri.org/IAccountServer/GetSettlementAmountResponse")]
        Atlas.Online.Node.AffordabilityNode.AccountService.GetSettlementAmountResponse GetSettlementAmount(Atlas.Online.Node.AffordabilityNode.AccountService.GetSettlementAmountRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServer/GetSettlementAmount", ReplyAction="http://tempuri.org/IAccountServer/GetSettlementAmountResponse")]
        System.Threading.Tasks.Task<Atlas.Online.Node.AffordabilityNode.AccountService.GetSettlementAmountResponse> GetSettlementAmountAsync(Atlas.Online.Node.AffordabilityNode.AccountService.GetSettlementAmountRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServer/GetSettlementQuotation", ReplyAction="http://tempuri.org/IAccountServer/GetSettlementQuotationResponse")]
        Atlas.Domain.Structures.Settlement GetSettlementQuotation(long accountId, long settlementId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServer/GetSettlementQuotation", ReplyAction="http://tempuri.org/IAccountServer/GetSettlementQuotationResponse")]
        System.Threading.Tasks.Task<Atlas.Domain.Structures.Settlement> GetSettlementQuotationAsync(long accountId, long settlementId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServer/GetOverdueAmount", ReplyAction="http://tempuri.org/IAccountServer/GetOverdueAmountResponse")]
        decimal GetOverdueAmount(long accountId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServer/GetOverdueAmount", ReplyAction="http://tempuri.org/IAccountServer/GetOverdueAmountResponse")]
        System.Threading.Tasks.Task<decimal> GetOverdueAmountAsync(long accountId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServer/PostSettlement", ReplyAction="http://tempuri.org/IAccountServer/PostSettlementResponse")]
        Atlas.Online.Node.AffordabilityNode.AccountService.PostSettlementResponse PostSettlement(Atlas.Online.Node.AffordabilityNode.AccountService.PostSettlementRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServer/PostSettlement", ReplyAction="http://tempuri.org/IAccountServer/PostSettlementResponse")]
        System.Threading.Tasks.Task<Atlas.Online.Node.AffordabilityNode.AccountService.PostSettlementResponse> PostSettlementAsync(Atlas.Online.Node.AffordabilityNode.AccountService.PostSettlementRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServer/UpdateAccountStatus", ReplyAction="http://tempuri.org/IAccountServer/UpdateAccountStatusResponse")]
        bool UpdateAccountStatus(long accountId, Atlas.Enumerators.Account.AccountStatus status, System.Nullable<Atlas.Enumerators.Account.AccountStatusReason> reason, System.Nullable<Atlas.Enumerators.Account.AccountStatusSubReason> subReason);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServer/UpdateAccountStatus", ReplyAction="http://tempuri.org/IAccountServer/UpdateAccountStatusResponse")]
        System.Threading.Tasks.Task<bool> UpdateAccountStatusAsync(long accountId, Atlas.Enumerators.Account.AccountStatus status, System.Nullable<Atlas.Enumerators.Account.AccountStatusReason> reason, System.Nullable<Atlas.Enumerators.Account.AccountStatusSubReason> subReason);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServer/SaveAffordabilityItem", ReplyAction="http://tempuri.org/IAccountServer/SaveAffordabilityItemResponse")]
        void SaveAffordabilityItem(long accountId, System.Collections.Generic.List<Atlas.Domain.DTO.ACC_AffordabilityDTO> affordability);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServer/SaveAffordabilityItem", ReplyAction="http://tempuri.org/IAccountServer/SaveAffordabilityItemResponse")]
        System.Threading.Tasks.Task SaveAffordabilityItemAsync(long accountId, System.Collections.Generic.List<Atlas.Domain.DTO.ACC_AffordabilityDTO> affordability);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServer/SaveAccount", ReplyAction="http://tempuri.org/IAccountServer/SaveAccountResponse")]
        Atlas.Domain.Structures.AccountInfo SaveAccount(decimal amount, int period, Atlas.Enumerators.Account.PeriodFrequency frequency, System.Nullable<long> personId, Atlas.Enumerators.General.Host host);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServer/SaveAccount", ReplyAction="http://tempuri.org/IAccountServer/SaveAccountResponse")]
        System.Threading.Tasks.Task<Atlas.Domain.Structures.AccountInfo> SaveAccountAsync(decimal amount, int period, Atlas.Enumerators.Account.PeriodFrequency frequency, System.Nullable<long> personId, Atlas.Enumerators.General.Host host);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServer/GetAccount", ReplyAction="http://tempuri.org/IAccountServer/GetAccountResponse")]
        Atlas.Domain.Structures.AccountInfo GetAccount(long personId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServer/GetAccount", ReplyAction="http://tempuri.org/IAccountServer/GetAccountResponse")]
        System.Threading.Tasks.Task<Atlas.Domain.Structures.AccountInfo> GetAccountAsync(long personId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServer/WorkflowStart", ReplyAction="http://tempuri.org/IAccountServer/WorkflowStartResponse")]
        void WorkflowStart(long accountId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServer/WorkflowStart", ReplyAction="http://tempuri.org/IAccountServer/WorkflowStartResponse")]
        System.Threading.Tasks.Task WorkflowStartAsync(long accountId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServer/WorkflowComplete", ReplyAction="http://tempuri.org/IAccountServer/WorkflowCompleteResponse")]
        void WorkflowComplete(long accountId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServer/WorkflowComplete", ReplyAction="http://tempuri.org/IAccountServer/WorkflowCompleteResponse")]
        System.Threading.Tasks.Task WorkflowCompleteAsync(long accountId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServer/WorkflowStepUp", ReplyAction="http://tempuri.org/IAccountServer/WorkflowStepUpResponse")]
        void WorkflowStepUp(long accountId, System.Nullable<Atlas.Enumerators.Workflow.ProcessStep> currentProcessStepId, System.Nullable<Atlas.Enumerators.Workflow.ProcessStep> nextProcessStepId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServer/WorkflowStepUp", ReplyAction="http://tempuri.org/IAccountServer/WorkflowStepUpResponse")]
        System.Threading.Tasks.Task WorkflowStepUpAsync(long accountId, System.Nullable<Atlas.Enumerators.Workflow.ProcessStep> currentProcessStepId, System.Nullable<Atlas.Enumerators.Workflow.ProcessStep> nextProcessStepId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServer/UpdateBankDetail", ReplyAction="http://tempuri.org/IAccountServer/UpdateBankDetailResponse")]
        bool UpdateBankDetail(long bankDetailId, bool isActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountServer/UpdateBankDetail", ReplyAction="http://tempuri.org/IAccountServer/UpdateBankDetailResponse")]
        System.Threading.Tasks.Task<bool> UpdateBankDetailAsync(long bankDetailId, bool isActive);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetActiveAccount", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetActiveAccountRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long personId;
        
        public GetActiveAccountRequest() {
        }
        
        public GetActiveAccountRequest(long personId) {
            this.personId = personId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetActiveAccountResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetActiveAccountResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Atlas.Domain.Structures.AccountInfo GetActiveAccountResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string error;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int result;
        
        public GetActiveAccountResponse() {
        }
        
        public GetActiveAccountResponse(Atlas.Domain.Structures.AccountInfo GetActiveAccountResult, string error, int result) {
            this.GetActiveAccountResult = GetActiveAccountResult;
            this.error = error;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAccountInfo", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetAccountInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long accountId;
        
        public GetAccountInfoRequest() {
        }
        
        public GetAccountInfoRequest(long accountId) {
            this.accountId = accountId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAccountInfoResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetAccountInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Atlas.Domain.Structures.AccountInfo GetAccountInfoResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string error;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int result;
        
        public GetAccountInfoResponse() {
        }
        
        public GetAccountInfoResponse(Atlas.Domain.Structures.AccountInfo GetAccountInfoResult, string error, int result) {
            this.GetAccountInfoResult = GetAccountInfoResult;
            this.error = error;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAllAccounts", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetAllAccountsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long personId;
        
        public GetAllAccountsRequest() {
        }
        
        public GetAllAccountsRequest(long personId) {
            this.personId = personId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAllAccountsResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetAllAccountsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.Collections.Generic.List<Atlas.Domain.Structures.AccountInfo> GetAllAccountsResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string error;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int result;
        
        public GetAllAccountsResponse() {
        }
        
        public GetAllAccountsResponse(System.Collections.Generic.List<Atlas.Domain.Structures.AccountInfo> GetAllAccountsResult, string error, int result) {
            this.GetAllAccountsResult = GetAllAccountsResult;
            this.error = error;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetActiveBankDetail", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetActiveBankDetailRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long personId;
        
        public GetActiveBankDetailRequest() {
        }
        
        public GetActiveBankDetailRequest(long personId) {
            this.personId = personId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetActiveBankDetailResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetActiveBankDetailResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Atlas.Domain.Structures.BankDetail GetActiveBankDetailResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string error;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int result;
        
        public GetActiveBankDetailResponse() {
        }
        
        public GetActiveBankDetailResponse(Atlas.Domain.Structures.BankDetail GetActiveBankDetailResult, string error, int result) {
            this.GetActiveBankDetailResult = GetActiveBankDetailResult;
            this.error = error;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPendingAVS", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetPendingAVSRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long personId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public long accountId;
        
        public GetPendingAVSRequest() {
        }
        
        public GetPendingAVSRequest(long personId, long accountId) {
            this.personId = personId;
            this.accountId = accountId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPendingAVSResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetPendingAVSResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.Collections.Generic.List<Atlas.Domain.Structures.PendingAVS> GetPendingAVSResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string error;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int result;
        
        public GetPendingAVSResponse() {
        }
        
        public GetPendingAVSResponse(System.Collections.Generic.List<Atlas.Domain.Structures.PendingAVS> GetPendingAVSResult, string error, int result) {
            this.GetPendingAVSResult = GetPendingAVSResult;
            this.error = error;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAffordabilityOption", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetAffordabilityOptionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long accountId;
        
        public GetAffordabilityOptionRequest() {
        }
        
        public GetAffordabilityOptionRequest(long accountId) {
            this.accountId = accountId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAffordabilityOptionResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetAffordabilityOptionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Atlas.Domain.Structures.AffordabilityOption GetAffordabilityOptionResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string error;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int result;
        
        public GetAffordabilityOptionResponse() {
        }
        
        public GetAffordabilityOptionResponse(Atlas.Domain.Structures.AffordabilityOption GetAffordabilityOptionResult, string error, int result) {
            this.GetAffordabilityOptionResult = GetAffordabilityOptionResult;
            this.error = error;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AcceptAffordabilityOption", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AcceptAffordabilityOptionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long accountId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public long affordabilityOptionId;
        
        public AcceptAffordabilityOptionRequest() {
        }
        
        public AcceptAffordabilityOptionRequest(long accountId, long affordabilityOptionId) {
            this.accountId = accountId;
            this.affordabilityOptionId = affordabilityOptionId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AcceptAffordabilityOptionResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AcceptAffordabilityOptionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool AcceptAffordabilityOptionResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string error;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int result;
        
        public AcceptAffordabilityOptionResponse() {
        }
        
        public AcceptAffordabilityOptionResponse(bool AcceptAffordabilityOptionResult, string error, int result) {
            this.AcceptAffordabilityOptionResult = AcceptAffordabilityOptionResult;
            this.error = error;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RejectAffordabilityOption", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class RejectAffordabilityOptionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long accountId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public long affordabilityOptionId;
        
        public RejectAffordabilityOptionRequest() {
        }
        
        public RejectAffordabilityOptionRequest(long accountId, long affordabilityOptionId) {
            this.accountId = accountId;
            this.affordabilityOptionId = affordabilityOptionId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RejectAffordabilityOptionResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class RejectAffordabilityOptionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool RejectAffordabilityOptionResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string error;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int result;
        
        public RejectAffordabilityOptionResponse() {
        }
        
        public RejectAffordabilityOptionResponse(bool RejectAffordabilityOptionResult, string error, int result) {
            this.RejectAffordabilityOptionResult = RejectAffordabilityOptionResult;
            this.error = error;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetQuote", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetQuoteRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long accountId;
        
        public GetQuoteRequest() {
        }
        
        public GetQuoteRequest(long accountId) {
            this.accountId = accountId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetQuoteResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetQuoteResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Atlas.Domain.Structures.Quotation GetQuoteResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string error;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int result;
        
        public GetQuoteResponse() {
        }
        
        public GetQuoteResponse(Atlas.Domain.Structures.Quotation GetQuoteResult, string error, int result) {
            this.GetQuoteResult = GetQuoteResult;
            this.error = error;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AcceptQuote", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AcceptQuoteRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long accountId;
        
        public AcceptQuoteRequest() {
        }
        
        public AcceptQuoteRequest(long accountId) {
            this.accountId = accountId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AcceptQuoteResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AcceptQuoteResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool AcceptQuoteResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string error;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int result;
        
        public AcceptQuoteResponse() {
        }
        
        public AcceptQuoteResponse(bool AcceptQuoteResult, string error, int result) {
            this.AcceptQuoteResult = AcceptQuoteResult;
            this.error = error;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RejectQuote", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class RejectQuoteRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long accountId;
        
        public RejectQuoteRequest() {
        }
        
        public RejectQuoteRequest(long accountId) {
            this.accountId = accountId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RejectQuoteResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class RejectQuoteResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool RejectQuoteResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string error;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int result;
        
        public RejectQuoteResponse() {
        }
        
        public RejectQuoteResponse(bool RejectQuoteResult, string error, int result) {
            this.RejectQuoteResult = RejectQuoteResult;
            this.error = error;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSettlementAmount", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetSettlementAmountRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long accountId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public System.DateTime settlementDate;
        
        public GetSettlementAmountRequest() {
        }
        
        public GetSettlementAmountRequest(long accountId, System.DateTime settlementDate) {
            this.accountId = accountId;
            this.settlementDate = settlementDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSettlementAmountResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetSettlementAmountResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.Nullable<decimal> GetSettlementAmountResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string error;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int result;
        
        public GetSettlementAmountResponse() {
        }
        
        public GetSettlementAmountResponse(System.Nullable<decimal> GetSettlementAmountResult, string error, int result) {
            this.GetSettlementAmountResult = GetSettlementAmountResult;
            this.error = error;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PostSettlement", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class PostSettlementRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public long accountId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public System.DateTime settlementDate;
        
        public PostSettlementRequest() {
        }
        
        public PostSettlementRequest(long accountId, System.DateTime settlementDate) {
            this.accountId = accountId;
            this.settlementDate = settlementDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PostSettlementResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class PostSettlementResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Atlas.Domain.Structures.Settlement PostSettlementResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string error;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int result;
        
        public PostSettlementResponse() {
        }
        
        public PostSettlementResponse(Atlas.Domain.Structures.Settlement PostSettlementResult, string error, int result) {
            this.PostSettlementResult = PostSettlementResult;
            this.error = error;
            this.result = result;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAccountServerChannel : Atlas.Online.Node.AffordabilityNode.AccountService.IAccountServer, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AccountServerClient : System.ServiceModel.ClientBase<Atlas.Online.Node.AffordabilityNode.AccountService.IAccountServer>, Atlas.Online.Node.AffordabilityNode.AccountService.IAccountServer {
        
        public AccountServerClient() {
        }
        
        public AccountServerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AccountServerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountServerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountServerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Atlas.Online.Node.AffordabilityNode.AccountService.GetActiveAccountResponse Atlas.Online.Node.AffordabilityNode.AccountService.IAccountServer.GetActiveAccount(Atlas.Online.Node.AffordabilityNode.AccountService.GetActiveAccountRequest request) {
            return base.Channel.GetActiveAccount(request);
        }
        
        public Atlas.Domain.Structures.AccountInfo GetActiveAccount(long personId, out string error, out int result) {
            Atlas.Online.Node.AffordabilityNode.AccountService.GetActiveAccountRequest inValue = new Atlas.Online.Node.AffordabilityNode.AccountService.GetActiveAccountRequest();
            inValue.personId = personId;
            Atlas.Online.Node.AffordabilityNode.AccountService.GetActiveAccountResponse retVal = ((Atlas.Online.Node.AffordabilityNode.AccountService.IAccountServer)(this)).GetActiveAccount(inValue);
            error = retVal.error;
            result = retVal.result;
            return retVal.GetActiveAccountResult;
        }
        
        public System.Threading.Tasks.Task<Atlas.Online.Node.AffordabilityNode.AccountService.GetActiveAccountResponse> GetActiveAccountAsync(Atlas.Online.Node.AffordabilityNode.AccountService.GetActiveAccountRequest request) {
            return base.Channel.GetActiveAccountAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Atlas.Online.Node.AffordabilityNode.AccountService.GetAccountInfoResponse Atlas.Online.Node.AffordabilityNode.AccountService.IAccountServer.GetAccountInfo(Atlas.Online.Node.AffordabilityNode.AccountService.GetAccountInfoRequest request) {
            return base.Channel.GetAccountInfo(request);
        }
        
        public Atlas.Domain.Structures.AccountInfo GetAccountInfo(long accountId, out string error, out int result) {
            Atlas.Online.Node.AffordabilityNode.AccountService.GetAccountInfoRequest inValue = new Atlas.Online.Node.AffordabilityNode.AccountService.GetAccountInfoRequest();
            inValue.accountId = accountId;
            Atlas.Online.Node.AffordabilityNode.AccountService.GetAccountInfoResponse retVal = ((Atlas.Online.Node.AffordabilityNode.AccountService.IAccountServer)(this)).GetAccountInfo(inValue);
            error = retVal.error;
            result = retVal.result;
            return retVal.GetAccountInfoResult;
        }
        
        public System.Threading.Tasks.Task<Atlas.Online.Node.AffordabilityNode.AccountService.GetAccountInfoResponse> GetAccountInfoAsync(Atlas.Online.Node.AffordabilityNode.AccountService.GetAccountInfoRequest request) {
            return base.Channel.GetAccountInfoAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Atlas.Online.Node.AffordabilityNode.AccountService.GetAllAccountsResponse Atlas.Online.Node.AffordabilityNode.AccountService.IAccountServer.GetAllAccounts(Atlas.Online.Node.AffordabilityNode.AccountService.GetAllAccountsRequest request) {
            return base.Channel.GetAllAccounts(request);
        }
        
        public System.Collections.Generic.List<Atlas.Domain.Structures.AccountInfo> GetAllAccounts(long personId, out string error, out int result) {
            Atlas.Online.Node.AffordabilityNode.AccountService.GetAllAccountsRequest inValue = new Atlas.Online.Node.AffordabilityNode.AccountService.GetAllAccountsRequest();
            inValue.personId = personId;
            Atlas.Online.Node.AffordabilityNode.AccountService.GetAllAccountsResponse retVal = ((Atlas.Online.Node.AffordabilityNode.AccountService.IAccountServer)(this)).GetAllAccounts(inValue);
            error = retVal.error;
            result = retVal.result;
            return retVal.GetAllAccountsResult;
        }
        
        public System.Threading.Tasks.Task<Atlas.Online.Node.AffordabilityNode.AccountService.GetAllAccountsResponse> GetAllAccountsAsync(Atlas.Online.Node.AffordabilityNode.AccountService.GetAllAccountsRequest request) {
            return base.Channel.GetAllAccountsAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Atlas.Online.Node.AffordabilityNode.AccountService.GetActiveBankDetailResponse Atlas.Online.Node.AffordabilityNode.AccountService.IAccountServer.GetActiveBankDetail(Atlas.Online.Node.AffordabilityNode.AccountService.GetActiveBankDetailRequest request) {
            return base.Channel.GetActiveBankDetail(request);
        }
        
        public Atlas.Domain.Structures.BankDetail GetActiveBankDetail(long personId, out string error, out int result) {
            Atlas.Online.Node.AffordabilityNode.AccountService.GetActiveBankDetailRequest inValue = new Atlas.Online.Node.AffordabilityNode.AccountService.GetActiveBankDetailRequest();
            inValue.personId = personId;
            Atlas.Online.Node.AffordabilityNode.AccountService.GetActiveBankDetailResponse retVal = ((Atlas.Online.Node.AffordabilityNode.AccountService.IAccountServer)(this)).GetActiveBankDetail(inValue);
            error = retVal.error;
            result = retVal.result;
            return retVal.GetActiveBankDetailResult;
        }
        
        public System.Threading.Tasks.Task<Atlas.Online.Node.AffordabilityNode.AccountService.GetActiveBankDetailResponse> GetActiveBankDetailAsync(Atlas.Online.Node.AffordabilityNode.AccountService.GetActiveBankDetailRequest request) {
            return base.Channel.GetActiveBankDetailAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Atlas.Online.Node.AffordabilityNode.AccountService.GetPendingAVSResponse Atlas.Online.Node.AffordabilityNode.AccountService.IAccountServer.GetPendingAVS(Atlas.Online.Node.AffordabilityNode.AccountService.GetPendingAVSRequest request) {
            return base.Channel.GetPendingAVS(request);
        }
        
        public System.Collections.Generic.List<Atlas.Domain.Structures.PendingAVS> GetPendingAVS(long personId, long accountId, out string error, out int result) {
            Atlas.Online.Node.AffordabilityNode.AccountService.GetPendingAVSRequest inValue = new Atlas.Online.Node.AffordabilityNode.AccountService.GetPendingAVSRequest();
            inValue.personId = personId;
            inValue.accountId = accountId;
            Atlas.Online.Node.AffordabilityNode.AccountService.GetPendingAVSResponse retVal = ((Atlas.Online.Node.AffordabilityNode.AccountService.IAccountServer)(this)).GetPendingAVS(inValue);
            error = retVal.error;
            result = retVal.result;
            return retVal.GetPendingAVSResult;
        }
        
        public System.Threading.Tasks.Task<Atlas.Online.Node.AffordabilityNode.AccountService.GetPendingAVSResponse> GetPendingAVSAsync(Atlas.Online.Node.AffordabilityNode.AccountService.GetPendingAVSRequest request) {
            return base.Channel.GetPendingAVSAsync(request);
        }
        
        public Atlas.Domain.Structures.AccountStatement GetStatement(long accountId) {
            return base.Channel.GetStatement(accountId);
        }
        
        public System.Threading.Tasks.Task<Atlas.Domain.Structures.AccountStatement> GetStatementAsync(long accountId) {
            return base.Channel.GetStatementAsync(accountId);
        }
        
        public int GetAVSFailureCount(long personId) {
            return base.Channel.GetAVSFailureCount(personId);
        }
        
        public System.Threading.Tasks.Task<int> GetAVSFailureCountAsync(long personId) {
            return base.Channel.GetAVSFailureCountAsync(personId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Atlas.Online.Node.AffordabilityNode.AccountService.GetAffordabilityOptionResponse Atlas.Online.Node.AffordabilityNode.AccountService.IAccountServer.GetAffordabilityOption(Atlas.Online.Node.AffordabilityNode.AccountService.GetAffordabilityOptionRequest request) {
            return base.Channel.GetAffordabilityOption(request);
        }
        
        public Atlas.Domain.Structures.AffordabilityOption GetAffordabilityOption(long accountId, out string error, out int result) {
            Atlas.Online.Node.AffordabilityNode.AccountService.GetAffordabilityOptionRequest inValue = new Atlas.Online.Node.AffordabilityNode.AccountService.GetAffordabilityOptionRequest();
            inValue.accountId = accountId;
            Atlas.Online.Node.AffordabilityNode.AccountService.GetAffordabilityOptionResponse retVal = ((Atlas.Online.Node.AffordabilityNode.AccountService.IAccountServer)(this)).GetAffordabilityOption(inValue);
            error = retVal.error;
            result = retVal.result;
            return retVal.GetAffordabilityOptionResult;
        }
        
        public System.Threading.Tasks.Task<Atlas.Online.Node.AffordabilityNode.AccountService.GetAffordabilityOptionResponse> GetAffordabilityOptionAsync(Atlas.Online.Node.AffordabilityNode.AccountService.GetAffordabilityOptionRequest request) {
            return base.Channel.GetAffordabilityOptionAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Atlas.Online.Node.AffordabilityNode.AccountService.AcceptAffordabilityOptionResponse Atlas.Online.Node.AffordabilityNode.AccountService.IAccountServer.AcceptAffordabilityOption(Atlas.Online.Node.AffordabilityNode.AccountService.AcceptAffordabilityOptionRequest request) {
            return base.Channel.AcceptAffordabilityOption(request);
        }
        
        public bool AcceptAffordabilityOption(long accountId, long affordabilityOptionId, out string error, out int result) {
            Atlas.Online.Node.AffordabilityNode.AccountService.AcceptAffordabilityOptionRequest inValue = new Atlas.Online.Node.AffordabilityNode.AccountService.AcceptAffordabilityOptionRequest();
            inValue.accountId = accountId;
            inValue.affordabilityOptionId = affordabilityOptionId;
            Atlas.Online.Node.AffordabilityNode.AccountService.AcceptAffordabilityOptionResponse retVal = ((Atlas.Online.Node.AffordabilityNode.AccountService.IAccountServer)(this)).AcceptAffordabilityOption(inValue);
            error = retVal.error;
            result = retVal.result;
            return retVal.AcceptAffordabilityOptionResult;
        }
        
        public System.Threading.Tasks.Task<Atlas.Online.Node.AffordabilityNode.AccountService.AcceptAffordabilityOptionResponse> AcceptAffordabilityOptionAsync(Atlas.Online.Node.AffordabilityNode.AccountService.AcceptAffordabilityOptionRequest request) {
            return base.Channel.AcceptAffordabilityOptionAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Atlas.Online.Node.AffordabilityNode.AccountService.RejectAffordabilityOptionResponse Atlas.Online.Node.AffordabilityNode.AccountService.IAccountServer.RejectAffordabilityOption(Atlas.Online.Node.AffordabilityNode.AccountService.RejectAffordabilityOptionRequest request) {
            return base.Channel.RejectAffordabilityOption(request);
        }
        
        public bool RejectAffordabilityOption(long accountId, long affordabilityOptionId, out string error, out int result) {
            Atlas.Online.Node.AffordabilityNode.AccountService.RejectAffordabilityOptionRequest inValue = new Atlas.Online.Node.AffordabilityNode.AccountService.RejectAffordabilityOptionRequest();
            inValue.accountId = accountId;
            inValue.affordabilityOptionId = affordabilityOptionId;
            Atlas.Online.Node.AffordabilityNode.AccountService.RejectAffordabilityOptionResponse retVal = ((Atlas.Online.Node.AffordabilityNode.AccountService.IAccountServer)(this)).RejectAffordabilityOption(inValue);
            error = retVal.error;
            result = retVal.result;
            return retVal.RejectAffordabilityOptionResult;
        }
        
        public System.Threading.Tasks.Task<Atlas.Online.Node.AffordabilityNode.AccountService.RejectAffordabilityOptionResponse> RejectAffordabilityOptionAsync(Atlas.Online.Node.AffordabilityNode.AccountService.RejectAffordabilityOptionRequest request) {
            return base.Channel.RejectAffordabilityOptionAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Atlas.Online.Node.AffordabilityNode.AccountService.GetQuoteResponse Atlas.Online.Node.AffordabilityNode.AccountService.IAccountServer.GetQuote(Atlas.Online.Node.AffordabilityNode.AccountService.GetQuoteRequest request) {
            return base.Channel.GetQuote(request);
        }
        
        public Atlas.Domain.Structures.Quotation GetQuote(long accountId, out string error, out int result) {
            Atlas.Online.Node.AffordabilityNode.AccountService.GetQuoteRequest inValue = new Atlas.Online.Node.AffordabilityNode.AccountService.GetQuoteRequest();
            inValue.accountId = accountId;
            Atlas.Online.Node.AffordabilityNode.AccountService.GetQuoteResponse retVal = ((Atlas.Online.Node.AffordabilityNode.AccountService.IAccountServer)(this)).GetQuote(inValue);
            error = retVal.error;
            result = retVal.result;
            return retVal.GetQuoteResult;
        }
        
        public System.Threading.Tasks.Task<Atlas.Online.Node.AffordabilityNode.AccountService.GetQuoteResponse> GetQuoteAsync(Atlas.Online.Node.AffordabilityNode.AccountService.GetQuoteRequest request) {
            return base.Channel.GetQuoteAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Atlas.Online.Node.AffordabilityNode.AccountService.AcceptQuoteResponse Atlas.Online.Node.AffordabilityNode.AccountService.IAccountServer.AcceptQuote(Atlas.Online.Node.AffordabilityNode.AccountService.AcceptQuoteRequest request) {
            return base.Channel.AcceptQuote(request);
        }
        
        public bool AcceptQuote(long accountId, out string error, out int result) {
            Atlas.Online.Node.AffordabilityNode.AccountService.AcceptQuoteRequest inValue = new Atlas.Online.Node.AffordabilityNode.AccountService.AcceptQuoteRequest();
            inValue.accountId = accountId;
            Atlas.Online.Node.AffordabilityNode.AccountService.AcceptQuoteResponse retVal = ((Atlas.Online.Node.AffordabilityNode.AccountService.IAccountServer)(this)).AcceptQuote(inValue);
            error = retVal.error;
            result = retVal.result;
            return retVal.AcceptQuoteResult;
        }
        
        public System.Threading.Tasks.Task<Atlas.Online.Node.AffordabilityNode.AccountService.AcceptQuoteResponse> AcceptQuoteAsync(Atlas.Online.Node.AffordabilityNode.AccountService.AcceptQuoteRequest request) {
            return base.Channel.AcceptQuoteAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Atlas.Online.Node.AffordabilityNode.AccountService.RejectQuoteResponse Atlas.Online.Node.AffordabilityNode.AccountService.IAccountServer.RejectQuote(Atlas.Online.Node.AffordabilityNode.AccountService.RejectQuoteRequest request) {
            return base.Channel.RejectQuote(request);
        }
        
        public bool RejectQuote(long accountId, out string error, out int result) {
            Atlas.Online.Node.AffordabilityNode.AccountService.RejectQuoteRequest inValue = new Atlas.Online.Node.AffordabilityNode.AccountService.RejectQuoteRequest();
            inValue.accountId = accountId;
            Atlas.Online.Node.AffordabilityNode.AccountService.RejectQuoteResponse retVal = ((Atlas.Online.Node.AffordabilityNode.AccountService.IAccountServer)(this)).RejectQuote(inValue);
            error = retVal.error;
            result = retVal.result;
            return retVal.RejectQuoteResult;
        }
        
        public System.Threading.Tasks.Task<Atlas.Online.Node.AffordabilityNode.AccountService.RejectQuoteResponse> RejectQuoteAsync(Atlas.Online.Node.AffordabilityNode.AccountService.RejectQuoteRequest request) {
            return base.Channel.RejectQuoteAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Atlas.Online.Node.AffordabilityNode.AccountService.GetSettlementAmountResponse Atlas.Online.Node.AffordabilityNode.AccountService.IAccountServer.GetSettlementAmount(Atlas.Online.Node.AffordabilityNode.AccountService.GetSettlementAmountRequest request) {
            return base.Channel.GetSettlementAmount(request);
        }
        
        public System.Nullable<decimal> GetSettlementAmount(long accountId, System.DateTime settlementDate, out string error, out int result) {
            Atlas.Online.Node.AffordabilityNode.AccountService.GetSettlementAmountRequest inValue = new Atlas.Online.Node.AffordabilityNode.AccountService.GetSettlementAmountRequest();
            inValue.accountId = accountId;
            inValue.settlementDate = settlementDate;
            Atlas.Online.Node.AffordabilityNode.AccountService.GetSettlementAmountResponse retVal = ((Atlas.Online.Node.AffordabilityNode.AccountService.IAccountServer)(this)).GetSettlementAmount(inValue);
            error = retVal.error;
            result = retVal.result;
            return retVal.GetSettlementAmountResult;
        }
        
        public System.Threading.Tasks.Task<Atlas.Online.Node.AffordabilityNode.AccountService.GetSettlementAmountResponse> GetSettlementAmountAsync(Atlas.Online.Node.AffordabilityNode.AccountService.GetSettlementAmountRequest request) {
            return base.Channel.GetSettlementAmountAsync(request);
        }
        
        public Atlas.Domain.Structures.Settlement GetSettlementQuotation(long accountId, long settlementId) {
            return base.Channel.GetSettlementQuotation(accountId, settlementId);
        }
        
        public System.Threading.Tasks.Task<Atlas.Domain.Structures.Settlement> GetSettlementQuotationAsync(long accountId, long settlementId) {
            return base.Channel.GetSettlementQuotationAsync(accountId, settlementId);
        }
        
        public decimal GetOverdueAmount(long accountId) {
            return base.Channel.GetOverdueAmount(accountId);
        }
        
        public System.Threading.Tasks.Task<decimal> GetOverdueAmountAsync(long accountId) {
            return base.Channel.GetOverdueAmountAsync(accountId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Atlas.Online.Node.AffordabilityNode.AccountService.PostSettlementResponse Atlas.Online.Node.AffordabilityNode.AccountService.IAccountServer.PostSettlement(Atlas.Online.Node.AffordabilityNode.AccountService.PostSettlementRequest request) {
            return base.Channel.PostSettlement(request);
        }
        
        public Atlas.Domain.Structures.Settlement PostSettlement(long accountId, System.DateTime settlementDate, out string error, out int result) {
            Atlas.Online.Node.AffordabilityNode.AccountService.PostSettlementRequest inValue = new Atlas.Online.Node.AffordabilityNode.AccountService.PostSettlementRequest();
            inValue.accountId = accountId;
            inValue.settlementDate = settlementDate;
            Atlas.Online.Node.AffordabilityNode.AccountService.PostSettlementResponse retVal = ((Atlas.Online.Node.AffordabilityNode.AccountService.IAccountServer)(this)).PostSettlement(inValue);
            error = retVal.error;
            result = retVal.result;
            return retVal.PostSettlementResult;
        }
        
        public System.Threading.Tasks.Task<Atlas.Online.Node.AffordabilityNode.AccountService.PostSettlementResponse> PostSettlementAsync(Atlas.Online.Node.AffordabilityNode.AccountService.PostSettlementRequest request) {
            return base.Channel.PostSettlementAsync(request);
        }
        
        public bool UpdateAccountStatus(long accountId, Atlas.Enumerators.Account.AccountStatus status, System.Nullable<Atlas.Enumerators.Account.AccountStatusReason> reason, System.Nullable<Atlas.Enumerators.Account.AccountStatusSubReason> subReason) {
            return base.Channel.UpdateAccountStatus(accountId, status, reason, subReason);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateAccountStatusAsync(long accountId, Atlas.Enumerators.Account.AccountStatus status, System.Nullable<Atlas.Enumerators.Account.AccountStatusReason> reason, System.Nullable<Atlas.Enumerators.Account.AccountStatusSubReason> subReason) {
            return base.Channel.UpdateAccountStatusAsync(accountId, status, reason, subReason);
        }
        
        public void SaveAffordabilityItem(long accountId, System.Collections.Generic.List<Atlas.Domain.DTO.ACC_AffordabilityDTO> affordability) {
            base.Channel.SaveAffordabilityItem(accountId, affordability);
        }
        
        public System.Threading.Tasks.Task SaveAffordabilityItemAsync(long accountId, System.Collections.Generic.List<Atlas.Domain.DTO.ACC_AffordabilityDTO> affordability) {
            return base.Channel.SaveAffordabilityItemAsync(accountId, affordability);
        }
        
        public Atlas.Domain.Structures.AccountInfo SaveAccount(decimal amount, int period, Atlas.Enumerators.Account.PeriodFrequency frequency, System.Nullable<long> personId, Atlas.Enumerators.General.Host host) {
            return base.Channel.SaveAccount(amount, period, frequency, personId, host);
        }
        
        public System.Threading.Tasks.Task<Atlas.Domain.Structures.AccountInfo> SaveAccountAsync(decimal amount, int period, Atlas.Enumerators.Account.PeriodFrequency frequency, System.Nullable<long> personId, Atlas.Enumerators.General.Host host) {
            return base.Channel.SaveAccountAsync(amount, period, frequency, personId, host);
        }
        
        public Atlas.Domain.Structures.AccountInfo GetAccount(long personId) {
            return base.Channel.GetAccount(personId);
        }
        
        public System.Threading.Tasks.Task<Atlas.Domain.Structures.AccountInfo> GetAccountAsync(long personId) {
            return base.Channel.GetAccountAsync(personId);
        }
        
        public void WorkflowStart(long accountId) {
            base.Channel.WorkflowStart(accountId);
        }
        
        public System.Threading.Tasks.Task WorkflowStartAsync(long accountId) {
            return base.Channel.WorkflowStartAsync(accountId);
        }
        
        public void WorkflowComplete(long accountId) {
            base.Channel.WorkflowComplete(accountId);
        }
        
        public System.Threading.Tasks.Task WorkflowCompleteAsync(long accountId) {
            return base.Channel.WorkflowCompleteAsync(accountId);
        }
        
        public void WorkflowStepUp(long accountId, System.Nullable<Atlas.Enumerators.Workflow.ProcessStep> currentProcessStepId, System.Nullable<Atlas.Enumerators.Workflow.ProcessStep> nextProcessStepId) {
            base.Channel.WorkflowStepUp(accountId, currentProcessStepId, nextProcessStepId);
        }
        
        public System.Threading.Tasks.Task WorkflowStepUpAsync(long accountId, System.Nullable<Atlas.Enumerators.Workflow.ProcessStep> currentProcessStepId, System.Nullable<Atlas.Enumerators.Workflow.ProcessStep> nextProcessStepId) {
            return base.Channel.WorkflowStepUpAsync(accountId, currentProcessStepId, nextProcessStepId);
        }
        
        public bool UpdateBankDetail(long bankDetailId, bool isActive) {
            return base.Channel.UpdateBankDetail(bankDetailId, isActive);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateBankDetailAsync(long bankDetailId, bool isActive) {
            return base.Channel.UpdateBankDetailAsync(bankDetailId, isActive);
        }
    }
}
