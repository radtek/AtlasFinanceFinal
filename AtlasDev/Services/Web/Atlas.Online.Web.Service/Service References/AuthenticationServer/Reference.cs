//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Atlas.Online.Web.Service.AuthenticationServer {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QuestionAnswers", Namespace="http://schemas.datacontract.org/2004/07/Atlas.ThirdParty.Xds")]
    [System.SerializableAttribute()]
    public partial class QuestionAnswers : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Atlas.Online.Web.Service.AuthenticationServer.QuestionAnswers.Answer> AnswersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long AuthenticationProcessStoreIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QuestionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long QuestionIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Atlas.Online.Web.Service.AuthenticationServer.QuestionAnswers.Answer> Answers {
            get {
                return this.AnswersField;
            }
            set {
                if ((object.ReferenceEquals(this.AnswersField, value) != true)) {
                    this.AnswersField = value;
                    this.RaisePropertyChanged("Answers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AuthenticationProcessStoreId {
            get {
                return this.AuthenticationProcessStoreIdField;
            }
            set {
                if ((this.AuthenticationProcessStoreIdField.Equals(value) != true)) {
                    this.AuthenticationProcessStoreIdField = value;
                    this.RaisePropertyChanged("AuthenticationProcessStoreId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Question {
            get {
                return this.QuestionField;
            }
            set {
                if ((object.ReferenceEquals(this.QuestionField, value) != true)) {
                    this.QuestionField = value;
                    this.RaisePropertyChanged("Question");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long QuestionId {
            get {
                return this.QuestionIdField;
            }
            set {
                if ((this.QuestionIdField.Equals(value) != true)) {
                    this.QuestionIdField = value;
                    this.RaisePropertyChanged("QuestionId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="QuestionAnswers.Answer", Namespace="http://schemas.datacontract.org/2004/07/Atlas.ThirdParty.Xds")]
        [System.SerializableAttribute()]
        public partial class Answer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string AnswerDescriptionField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private long AnswerIdField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private bool IsAnswerField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string AnswerDescription {
                get {
                    return this.AnswerDescriptionField;
                }
                set {
                    if ((object.ReferenceEquals(this.AnswerDescriptionField, value) != true)) {
                        this.AnswerDescriptionField = value;
                        this.RaisePropertyChanged("AnswerDescription");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public long AnswerId {
                get {
                    return this.AnswerIdField;
                }
                set {
                    if ((this.AnswerIdField.Equals(value) != true)) {
                        this.AnswerIdField = value;
                        this.RaisePropertyChanged("AnswerId");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public bool IsAnswer {
                get {
                    return this.IsAnswerField;
                }
                set {
                    if ((this.IsAnswerField.Equals(value) != true)) {
                        this.IsAnswerField = value;
                        this.RaisePropertyChanged("IsAnswer");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            protected void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VerificationStatus", Namespace="http://schemas.datacontract.org/2004/07/Atlas.ThirdParty.Xds")]
    [System.SerializableAttribute()]
    public partial struct VerificationStatus : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IterationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Atlas.Online.Web.Service.AuthenticationServer.Status StatusField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Iteration {
            get {
                return this.IterationField;
            }
            set {
                if ((this.IterationField.Equals(value) != true)) {
                    this.IterationField = value;
                    this.RaisePropertyChanged("Iteration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Atlas.Online.Web.Service.AuthenticationServer.Status Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Status", Namespace="http://schemas.datacontract.org/2004/07/Atlas.ThirdParty.Xds")]
    public enum Status : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PASSED = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FAILED = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NO_MORE_RETRIES = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TupleOfbooleanint", Namespace="http://schemas.datacontract.org/2004/07/System")]
    [System.SerializableAttribute()]
    public partial class TupleOfbooleanint : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private bool m_Item1Field;
        
        private int m_Item2Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool m_Item1 {
            get {
                return this.m_Item1Field;
            }
            set {
                if ((this.m_Item1Field.Equals(value) != true)) {
                    this.m_Item1Field = value;
                    this.RaisePropertyChanged("m_Item1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int m_Item2 {
            get {
                return this.m_Item2Field;
            }
            set {
                if ((this.m_Item2Field.Equals(value) != true)) {
                    this.m_Item2Field = value;
                    this.RaisePropertyChanged("m_Item2");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AuthenticationServer.IAuthenticationServer")]
    public interface IAuthenticationServer {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationServer/GetQuestions", ReplyAction="http://tempuri.org/IAuthenticationServer/GetQuestionsResponse")]
        System.Collections.Generic.List<Atlas.Online.Web.Service.AuthenticationServer.QuestionAnswers> GetQuestions(long accountId, string idNo, string refNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationServer/GetQuestions", ReplyAction="http://tempuri.org/IAuthenticationServer/GetQuestionsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Atlas.Online.Web.Service.AuthenticationServer.QuestionAnswers>> GetQuestionsAsync(long accountId, string idNo, string refNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationServer/SubmitAnswers", ReplyAction="http://tempuri.org/IAuthenticationServer/SubmitAnswersResponse")]
        Atlas.Online.Web.Service.AuthenticationServer.VerificationStatus SubmitAnswers(System.Collections.Generic.List<Atlas.Online.Web.Service.AuthenticationServer.QuestionAnswers> questionAnswers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationServer/SubmitAnswers", ReplyAction="http://tempuri.org/IAuthenticationServer/SubmitAnswersResponse")]
        System.Threading.Tasks.Task<Atlas.Online.Web.Service.AuthenticationServer.VerificationStatus> SubmitAnswersAsync(System.Collections.Generic.List<Atlas.Online.Web.Service.AuthenticationServer.QuestionAnswers> questionAnswers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationServer/ExceededAuthenticationTries", ReplyAction="http://tempuri.org/IAuthenticationServer/ExceededAuthenticationTriesResponse")]
        Atlas.Online.Web.Service.AuthenticationServer.TupleOfbooleanint ExceededAuthenticationTries(long accountId, string IdNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationServer/ExceededAuthenticationTries", ReplyAction="http://tempuri.org/IAuthenticationServer/ExceededAuthenticationTriesResponse")]
        System.Threading.Tasks.Task<Atlas.Online.Web.Service.AuthenticationServer.TupleOfbooleanint> ExceededAuthenticationTriesAsync(long accountId, string IdNo);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAuthenticationServerChannel : Atlas.Online.Web.Service.AuthenticationServer.IAuthenticationServer, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuthenticationServerClient : System.ServiceModel.ClientBase<Atlas.Online.Web.Service.AuthenticationServer.IAuthenticationServer>, Atlas.Online.Web.Service.AuthenticationServer.IAuthenticationServer {
        
        public AuthenticationServerClient() {
        }
        
        public AuthenticationServerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AuthenticationServerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthenticationServerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthenticationServerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<Atlas.Online.Web.Service.AuthenticationServer.QuestionAnswers> GetQuestions(long accountId, string idNo, string refNo) {
            return base.Channel.GetQuestions(accountId, idNo, refNo);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Atlas.Online.Web.Service.AuthenticationServer.QuestionAnswers>> GetQuestionsAsync(long accountId, string idNo, string refNo) {
            return base.Channel.GetQuestionsAsync(accountId, idNo, refNo);
        }
        
        public Atlas.Online.Web.Service.AuthenticationServer.VerificationStatus SubmitAnswers(System.Collections.Generic.List<Atlas.Online.Web.Service.AuthenticationServer.QuestionAnswers> questionAnswers) {
            return base.Channel.SubmitAnswers(questionAnswers);
        }
        
        public System.Threading.Tasks.Task<Atlas.Online.Web.Service.AuthenticationServer.VerificationStatus> SubmitAnswersAsync(System.Collections.Generic.List<Atlas.Online.Web.Service.AuthenticationServer.QuestionAnswers> questionAnswers) {
            return base.Channel.SubmitAnswersAsync(questionAnswers);
        }
        
        public Atlas.Online.Web.Service.AuthenticationServer.TupleOfbooleanint ExceededAuthenticationTries(long accountId, string IdNo) {
            return base.Channel.ExceededAuthenticationTries(accountId, IdNo);
        }
        
        public System.Threading.Tasks.Task<Atlas.Online.Web.Service.AuthenticationServer.TupleOfbooleanint> ExceededAuthenticationTriesAsync(long accountId, string IdNo) {
            return base.Channel.ExceededAuthenticationTriesAsync(accountId, IdNo);
        }
    }
}
