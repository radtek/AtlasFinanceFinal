//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(Namespace="https://www.nupaytsp.co.za/", ConfigurationName="wsNaedoSoap")]
public interface wsNaedoSoap
{
    
    [System.ServiceModel.OperationContractAttribute(Action="https://www.nupaytsp.co.za/acountChange", ReplyAction="*")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.Xml.XmlNode acountChange(string user_id, string password, int transaction_id, string card_acceptor, string new_account_name, string new_acount_number, string new_acount_branch, string new_acount_type);
    
    [System.ServiceModel.OperationContractAttribute(Action="https://www.nupaytsp.co.za/acountChange", ReplyAction="*")]
    System.Threading.Tasks.Task<System.Xml.XmlNode> acountChangeAsync(string user_id, string password, int transaction_id, string card_acceptor, string new_account_name, string new_acount_number, string new_acount_branch, string new_acount_type);
    
    [System.ServiceModel.OperationContractAttribute(Action="https://www.nupaytsp.co.za/aedoConvert", ReplyAction="*")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.Xml.XmlNode aedoConvert(string user_id, string password, int transaction_id, string card_acceptor, string new_acount_number, string new_acount_branch, System.DateTime new_submit_date, string new_tracking_indicator, int new_frequency);
    
    [System.ServiceModel.OperationContractAttribute(Action="https://www.nupaytsp.co.za/aedoConvert", ReplyAction="*")]
    System.Threading.Tasks.Task<System.Xml.XmlNode> aedoConvertAsync(string user_id, string password, int transaction_id, string card_acceptor, string new_acount_number, string new_acount_branch, System.DateTime new_submit_date, string new_tracking_indicator, int new_frequency);
    
    [System.ServiceModel.OperationContractAttribute(Action="https://www.nupaytsp.co.za/contractActivation", ReplyAction="*")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.Xml.XmlNode contractActivation(string user_id, string password, int transaction_id, string card_acceptor);
    
    [System.ServiceModel.OperationContractAttribute(Action="https://www.nupaytsp.co.za/contractActivation", ReplyAction="*")]
    System.Threading.Tasks.Task<System.Xml.XmlNode> contractActivationAsync(string user_id, string password, int transaction_id, string card_acceptor);
    
    [System.ServiceModel.OperationContractAttribute(Action="https://www.nupaytsp.co.za/contractCancellation", ReplyAction="*")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.Xml.XmlNode contractCancellation(string user_id, string password, int transaction_id, string card_acceptor);
    
    [System.ServiceModel.OperationContractAttribute(Action="https://www.nupaytsp.co.za/contractCancellation", ReplyAction="*")]
    System.Threading.Tasks.Task<System.Xml.XmlNode> contractCancellationAsync(string user_id, string password, int transaction_id, string card_acceptor);
    
    [System.ServiceModel.OperationContractAttribute(Action="https://www.nupaytsp.co.za/contractDateChange", ReplyAction="*")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.Xml.XmlNode contractDateChange(string user_id, string password, int transaction_id, string card_acceptor, System.DateTime new_submit_date, string frequency);
    
    [System.ServiceModel.OperationContractAttribute(Action="https://www.nupaytsp.co.za/contractDateChange", ReplyAction="*")]
    System.Threading.Tasks.Task<System.Xml.XmlNode> contractDateChangeAsync(string user_id, string password, int transaction_id, string card_acceptor, System.DateTime new_submit_date, string frequency);
    
    [System.ServiceModel.OperationContractAttribute(Action="https://www.nupaytsp.co.za/contractTrackingChange", ReplyAction="*")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.Xml.XmlNode contractTrackingChange(string user_id, string password, int transaction_id, string card_acceptor, string tracking_indicator);
    
    [System.ServiceModel.OperationContractAttribute(Action="https://www.nupaytsp.co.za/contractTrackingChange", ReplyAction="*")]
    System.Threading.Tasks.Task<System.Xml.XmlNode> contractTrackingChangeAsync(string user_id, string password, int transaction_id, string card_acceptor, string tracking_indicator);
    
    [System.ServiceModel.OperationContractAttribute(Action="https://www.nupaytsp.co.za/instalmentAmountChange", ReplyAction="*")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.Xml.XmlNode instalmentAmountChange(string user_id, string password, int transaction_id, string card_acceptor, int instalment, string new_amount);
    
    [System.ServiceModel.OperationContractAttribute(Action="https://www.nupaytsp.co.za/instalmentAmountChange", ReplyAction="*")]
    System.Threading.Tasks.Task<System.Xml.XmlNode> instalmentAmountChangeAsync(string user_id, string password, int transaction_id, string card_acceptor, int instalment, string new_amount);
    
    [System.ServiceModel.OperationContractAttribute(Action="https://www.nupaytsp.co.za/instalmentCancellation", ReplyAction="*")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.Xml.XmlNode instalmentCancellation(string user_id, string password, int transaction_id, string card_acceptor, int instalment);
    
    [System.ServiceModel.OperationContractAttribute(Action="https://www.nupaytsp.co.za/instalmentCancellation", ReplyAction="*")]
    System.Threading.Tasks.Task<System.Xml.XmlNode> instalmentCancellationAsync(string user_id, string password, int transaction_id, string card_acceptor, int instalment);
    
    [System.ServiceModel.OperationContractAttribute(Action="https://www.nupaytsp.co.za/instalmentDateChange", ReplyAction="*")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.Xml.XmlNode instalmentDateChange(string user_id, string password, int transaction_id, string card_acceptor, int instalment, System.DateTime new_submit_date);
    
    [System.ServiceModel.OperationContractAttribute(Action="https://www.nupaytsp.co.za/instalmentDateChange", ReplyAction="*")]
    System.Threading.Tasks.Task<System.Xml.XmlNode> instalmentDateChangeAsync(string user_id, string password, int transaction_id, string card_acceptor, int instalment, System.DateTime new_submit_date);
    
    [System.ServiceModel.OperationContractAttribute(Action="https://www.nupaytsp.co.za/instalmentMaintenance", ReplyAction="*")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.Xml.XmlNode instalmentMaintenance(string user_id, string password, int transaction_id, string card_acceptor, int instalment, System.DateTime new_submit_date, string new_tracking_indicator);
    
    [System.ServiceModel.OperationContractAttribute(Action="https://www.nupaytsp.co.za/instalmentMaintenance", ReplyAction="*")]
    System.Threading.Tasks.Task<System.Xml.XmlNode> instalmentMaintenanceAsync(string user_id, string password, int transaction_id, string card_acceptor, int instalment, System.DateTime new_submit_date, string new_tracking_indicator);
    
    [System.ServiceModel.OperationContractAttribute(Action="https://www.nupaytsp.co.za/instalmentReschedule", ReplyAction="*")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.Xml.XmlNode instalmentReschedule(string user_id, string password, int transaction_id, string card_acceptor, int instalment, System.DateTime new_submit_date);
    
    [System.ServiceModel.OperationContractAttribute(Action="https://www.nupaytsp.co.za/instalmentReschedule", ReplyAction="*")]
    System.Threading.Tasks.Task<System.Xml.XmlNode> instalmentRescheduleAsync(string user_id, string password, int transaction_id, string card_acceptor, int instalment, System.DateTime new_submit_date);
    
    [System.ServiceModel.OperationContractAttribute(Action="https://www.nupaytsp.co.za/instalmentRescheduleMaintenance", ReplyAction="*")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.Xml.XmlNode instalmentRescheduleMaintenance(string user_id, string password, int transaction_id, string card_acceptor, int instalment, System.DateTime new_submit_date, string new_tracking_indicator);
    
    [System.ServiceModel.OperationContractAttribute(Action="https://www.nupaytsp.co.za/instalmentRescheduleMaintenance", ReplyAction="*")]
    System.Threading.Tasks.Task<System.Xml.XmlNode> instalmentRescheduleMaintenanceAsync(string user_id, string password, int transaction_id, string card_acceptor, int instalment, System.DateTime new_submit_date, string new_tracking_indicator);
    
    [System.ServiceModel.OperationContractAttribute(Action="https://www.nupaytsp.co.za/instalmentTrackingChange", ReplyAction="*")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.Xml.XmlNode instalmentTrackingChange(string user_id, string password, int transaction_id, string card_acceptor, int instalment, string new_tracking_indicator);
    
    [System.ServiceModel.OperationContractAttribute(Action="https://www.nupaytsp.co.za/instalmentTrackingChange", ReplyAction="*")]
    System.Threading.Tasks.Task<System.Xml.XmlNode> instalmentTrackingChangeAsync(string user_id, string password, int transaction_id, string card_acceptor, int instalment, string new_tracking_indicator);
    
    [System.ServiceModel.OperationContractAttribute(Action="https://www.nupaytsp.co.za/instalmentRecall", ReplyAction="*")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.Xml.XmlNode instalmentRecall(string user_id, string password, int transaction_id, string card_acceptor, int instalment);
    
    [System.ServiceModel.OperationContractAttribute(Action="https://www.nupaytsp.co.za/instalmentRecall", ReplyAction="*")]
    System.Threading.Tasks.Task<System.Xml.XmlNode> instalmentRecallAsync(string user_id, string password, int transaction_id, string card_acceptor, int instalment);
    
    [System.ServiceModel.OperationContractAttribute(Action="https://www.nupaytsp.co.za/getTPFReport", ReplyAction="*")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.Xml.XmlNode getTPFReport(int merchant_number, string username, string password, int service_type, int report_type, System.DateTime date_from, System.DateTime date_to, int token_id, int block_id);
    
    [System.ServiceModel.OperationContractAttribute(Action="https://www.nupaytsp.co.za/getTPFReport", ReplyAction="*")]
    System.Threading.Tasks.Task<System.Xml.XmlNode> getTPFReportAsync(int merchant_number, string username, string password, int service_type, int report_type, System.DateTime date_from, System.DateTime date_to, int token_id, int block_id);
    
    [System.ServiceModel.OperationContractAttribute(Action="https://www.nupaytsp.co.za/checkTPF", ReplyAction="*")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.Xml.XmlNode checkTPF(string card_acceptor);
    
    [System.ServiceModel.OperationContractAttribute(Action="https://www.nupaytsp.co.za/checkTPF", ReplyAction="*")]
    System.Threading.Tasks.Task<System.Xml.XmlNode> checkTPFAsync(string card_acceptor);
    
    [System.ServiceModel.OperationContractAttribute(Action="https://www.nupaytsp.co.za/uploadTSPTransaction", ReplyAction="*")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.Xml.XmlNode uploadTSPTransaction(
                int merchant_number, 
                string username, 
                string password, 
                int service_type, 
                string nominated_account_number, 
                string client_ref_1, 
                string client_ref_2, 
                string account_number, 
                string account_name, 
                string branch_code, 
                int account_type, 
                int frequency, 
                int entry_class, 
                int no_of_instalments, 
                System.DateTime action_date, 
                string transaction_value, 
                string client_id, 
                int days_warning, 
                int email_flag, 
                string email_address, 
                int sms_flag, 
                string cell_no);
    
    [System.ServiceModel.OperationContractAttribute(Action="https://www.nupaytsp.co.za/uploadTSPTransaction", ReplyAction="*")]
    System.Threading.Tasks.Task<System.Xml.XmlNode> uploadTSPTransactionAsync(
                int merchant_number, 
                string username, 
                string password, 
                int service_type, 
                string nominated_account_number, 
                string client_ref_1, 
                string client_ref_2, 
                string account_number, 
                string account_name, 
                string branch_code, 
                int account_type, 
                int frequency, 
                int entry_class, 
                int no_of_instalments, 
                System.DateTime action_date, 
                string transaction_value, 
                string client_id, 
                int days_warning, 
                int email_flag, 
                string email_address, 
                int sms_flag, 
                string cell_no);
    
    [System.ServiceModel.OperationContractAttribute(Action="https://www.nupaytsp.co.za/uploadCCTransaction", ReplyAction="*")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.Xml.XmlNode uploadCCTransaction(
                int merchant_number, 
                string username, 
                string password, 
                int service_type, 
                string nominated_account_number, 
                string client_ref_1, 
                string client_ref_2, 
                int frequency, 
                int no_of_instalments, 
                System.DateTime action_date, 
                string transaction_value, 
                string client_id, 
                string credit_card_number, 
                string cvv2, 
                string expiry_date, 
                int days_warning, 
                int email_flag, 
                string email_address, 
                int sms_flag, 
                string cell_no);
    
    [System.ServiceModel.OperationContractAttribute(Action="https://www.nupaytsp.co.za/uploadCCTransaction", ReplyAction="*")]
    System.Threading.Tasks.Task<System.Xml.XmlNode> uploadCCTransactionAsync(
                int merchant_number, 
                string username, 
                string password, 
                int service_type, 
                string nominated_account_number, 
                string client_ref_1, 
                string client_ref_2, 
                int frequency, 
                int no_of_instalments, 
                System.DateTime action_date, 
                string transaction_value, 
                string client_id, 
                string credit_card_number, 
                string cvv2, 
                string expiry_date, 
                int days_warning, 
                int email_flag, 
                string email_address, 
                int sms_flag, 
                string cell_no);
    
    [System.ServiceModel.OperationContractAttribute(Action="https://www.nupaytsp.co.za/uploadNaedoTransaction", ReplyAction="*")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.Xml.XmlNode uploadNaedoTransaction(
                int merchant_number, 
                string username, 
                string password, 
                int service_type, 
                string nominated_account_number, 
                string client_ref_1, 
                string client_ref_2, 
                string account_number, 
                string account_name, 
                string branch_code, 
                int account_type, 
                int frequency, 
                int tracking_indicator, 
                int no_of_instalments, 
                System.DateTime action_date, 
                string transaction_value, 
                string client_id, 
                int days_warning, 
                int email_flag, 
                string email_address, 
                int sms_flag, 
                string cell_no);
    
    [System.ServiceModel.OperationContractAttribute(Action="https://www.nupaytsp.co.za/uploadNaedoTransaction", ReplyAction="*")]
    System.Threading.Tasks.Task<System.Xml.XmlNode> uploadNaedoTransactionAsync(
                int merchant_number, 
                string username, 
                string password, 
                int service_type, 
                string nominated_account_number, 
                string client_ref_1, 
                string client_ref_2, 
                string account_number, 
                string account_name, 
                string branch_code, 
                int account_type, 
                int frequency, 
                int tracking_indicator, 
                int no_of_instalments, 
                System.DateTime action_date, 
                string transaction_value, 
                string client_id, 
                int days_warning, 
                int email_flag, 
                string email_address, 
                int sms_flag, 
                string cell_no);
    
    [System.ServiceModel.OperationContractAttribute(Action="https://www.nupaytsp.co.za/updateInstalment", ReplyAction="*")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.Xml.XmlNode updateInstalment(int merchant_number, string username, string password, int service_type, int transaction_id, int instalment, string client_ref_2, System.DateTime action_date, string transaction_value);
    
    [System.ServiceModel.OperationContractAttribute(Action="https://www.nupaytsp.co.za/updateInstalment", ReplyAction="*")]
    System.Threading.Tasks.Task<System.Xml.XmlNode> updateInstalmentAsync(int merchant_number, string username, string password, int service_type, int transaction_id, int instalment, string client_ref_2, System.DateTime action_date, string transaction_value);
    
    [System.ServiceModel.OperationContractAttribute(Action="https://www.nupaytsp.co.za/cancelTransaction", ReplyAction="*")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.Xml.XmlNode cancelTransaction(int merchant_number, string username, string password, int service_type, int transaction_id, string client_ref_2);
    
    [System.ServiceModel.OperationContractAttribute(Action="https://www.nupaytsp.co.za/cancelTransaction", ReplyAction="*")]
    System.Threading.Tasks.Task<System.Xml.XmlNode> cancelTransactionAsync(int merchant_number, string username, string password, int service_type, int transaction_id, string client_ref_2);
    
    [System.ServiceModel.OperationContractAttribute(Action="https://www.nupaytsp.co.za/cancelInstalment", ReplyAction="*")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.Xml.XmlNode cancelInstalment(int merchant_number, string username, string password, int service_type, int transaction_id, int instalment, string client_ref_2);
    
    [System.ServiceModel.OperationContractAttribute(Action="https://www.nupaytsp.co.za/cancelInstalment", ReplyAction="*")]
    System.Threading.Tasks.Task<System.Xml.XmlNode> cancelInstalmentAsync(int merchant_number, string username, string password, int service_type, int transaction_id, int instalment, string client_ref_2);
    
    [System.ServiceModel.OperationContractAttribute(Action="https://www.nupaytsp.co.za/CDVCheck", ReplyAction="*")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.Xml.XmlNode CDVCheck(int merchant_number, string username, string password, string account_number, int account_type, string branch_code);
    
    [System.ServiceModel.OperationContractAttribute(Action="https://www.nupaytsp.co.za/CDVCheck", ReplyAction="*")]
    System.Threading.Tasks.Task<System.Xml.XmlNode> CDVCheckAsync(int merchant_number, string username, string password, string account_number, int account_type, string branch_code);
    
    [System.ServiceModel.OperationContractAttribute(Action="https://www.nupaytsp.co.za/updateTSPTransaction", ReplyAction="*")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.Xml.XmlNode updateTSPTransaction(int merchant_number, string username, string password, int service_type, int transaction_id, string current_client_ref_2, string client_ref_1, string client_ref_2, string account_number, string branch_code, int account_type);
    
    [System.ServiceModel.OperationContractAttribute(Action="https://www.nupaytsp.co.za/updateTSPTransaction", ReplyAction="*")]
    System.Threading.Tasks.Task<System.Xml.XmlNode> updateTSPTransactionAsync(int merchant_number, string username, string password, int service_type, int transaction_id, string current_client_ref_2, string client_ref_1, string client_ref_2, string account_number, string branch_code, int account_type);
    
    [System.ServiceModel.OperationContractAttribute(Action="https://www.nupaytsp.co.za/updateNaedoTransaction", ReplyAction="*")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.Xml.XmlNode updateNaedoTransaction(int merchant_number, string username, string password, int service_type, int transaction_id, string current_client_ref_2, string client_ref_1, string client_ref_2, string account_number, string branch_code, int account_type, int tracking_indicator);
    
    [System.ServiceModel.OperationContractAttribute(Action="https://www.nupaytsp.co.za/updateNaedoTransaction", ReplyAction="*")]
    System.Threading.Tasks.Task<System.Xml.XmlNode> updateNaedoTransactionAsync(int merchant_number, string username, string password, int service_type, int transaction_id, string current_client_ref_2, string client_ref_1, string client_ref_2, string account_number, string branch_code, int account_type, int tracking_indicator);
    
    [System.ServiceModel.OperationContractAttribute(Action="https://www.nupaytsp.co.za/updateCCTransaction", ReplyAction="*")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.Xml.XmlNode updateCCTransaction(int merchant_number, string username, string password, int service_type, int transaction_id, string current_client_ref_2, string client_ref_1, string client_ref_2);
    
    [System.ServiceModel.OperationContractAttribute(Action="https://www.nupaytsp.co.za/updateCCTransaction", ReplyAction="*")]
    System.Threading.Tasks.Task<System.Xml.XmlNode> updateCCTransactionAsync(int merchant_number, string username, string password, int service_type, int transaction_id, string current_client_ref_2, string client_ref_1, string client_ref_2);
    
    [System.ServiceModel.OperationContractAttribute(Action="https://www.nupaytsp.co.za/getReport", ReplyAction="*")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.Xml.XmlNode getReport(int merchant_number, string username, string password, int service_type, int report_type, System.DateTime date_from, System.DateTime date_to, int token_id, int block_id);
    
    [System.ServiceModel.OperationContractAttribute(Action="https://www.nupaytsp.co.za/getReport", ReplyAction="*")]
    System.Threading.Tasks.Task<System.Xml.XmlNode> getReportAsync(int merchant_number, string username, string password, int service_type, int report_type, System.DateTime date_from, System.DateTime date_to, int token_id, int block_id);
    
    [System.ServiceModel.OperationContractAttribute(Action="https://www.nupaytsp.co.za/getNotification", ReplyAction="*")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.Xml.XmlNode getNotification(int merchant_number, string username, string password, System.DateTime date_from, System.DateTime date_to, string reason_code, int token_id, int block_id);
    
    [System.ServiceModel.OperationContractAttribute(Action="https://www.nupaytsp.co.za/getNotification", ReplyAction="*")]
    System.Threading.Tasks.Task<System.Xml.XmlNode> getNotificationAsync(int merchant_number, string username, string password, System.DateTime date_from, System.DateTime date_to, string reason_code, int token_id, int block_id);
    
    [System.ServiceModel.OperationContractAttribute(Action="https://www.nupaytsp.co.za/requestProgressNAEDO", ReplyAction="*")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.Xml.XmlNode requestProgressNAEDO(string bank);
    
    [System.ServiceModel.OperationContractAttribute(Action="https://www.nupaytsp.co.za/requestProgressNAEDO", ReplyAction="*")]
    System.Threading.Tasks.Task<System.Xml.XmlNode> requestProgressNAEDOAsync(string bank);
    
    [System.ServiceModel.OperationContractAttribute(Action="https://www.nupaytsp.co.za/getReportEDO", ReplyAction="*")]
    [System.ServiceModel.XmlSerializerFormatAttribute()]
    System.Xml.XmlNode getReportEDO(int merchant_number, string username, string password, int service_type, int report_type, System.DateTime date_from, System.DateTime date_to, int token_id, int block_id);
    
    [System.ServiceModel.OperationContractAttribute(Action="https://www.nupaytsp.co.za/getReportEDO", ReplyAction="*")]
    System.Threading.Tasks.Task<System.Xml.XmlNode> getReportEDOAsync(int merchant_number, string username, string password, int service_type, int report_type, System.DateTime date_from, System.DateTime date_to, int token_id, int block_id);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface wsNaedoSoapChannel : wsNaedoSoap, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class wsNaedoSoapClient : System.ServiceModel.ClientBase<wsNaedoSoap>, wsNaedoSoap
{
    
    public wsNaedoSoapClient()
    {
    }
    
    public wsNaedoSoapClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public wsNaedoSoapClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public wsNaedoSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public wsNaedoSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public System.Xml.XmlNode acountChange(string user_id, string password, int transaction_id, string card_acceptor, string new_account_name, string new_acount_number, string new_acount_branch, string new_acount_type)
    {
        return base.Channel.acountChange(user_id, password, transaction_id, card_acceptor, new_account_name, new_acount_number, new_acount_branch, new_acount_type);
    }
    
    public System.Threading.Tasks.Task<System.Xml.XmlNode> acountChangeAsync(string user_id, string password, int transaction_id, string card_acceptor, string new_account_name, string new_acount_number, string new_acount_branch, string new_acount_type)
    {
        return base.Channel.acountChangeAsync(user_id, password, transaction_id, card_acceptor, new_account_name, new_acount_number, new_acount_branch, new_acount_type);
    }
    
    public System.Xml.XmlNode aedoConvert(string user_id, string password, int transaction_id, string card_acceptor, string new_acount_number, string new_acount_branch, System.DateTime new_submit_date, string new_tracking_indicator, int new_frequency)
    {
        return base.Channel.aedoConvert(user_id, password, transaction_id, card_acceptor, new_acount_number, new_acount_branch, new_submit_date, new_tracking_indicator, new_frequency);
    }
    
    public System.Threading.Tasks.Task<System.Xml.XmlNode> aedoConvertAsync(string user_id, string password, int transaction_id, string card_acceptor, string new_acount_number, string new_acount_branch, System.DateTime new_submit_date, string new_tracking_indicator, int new_frequency)
    {
        return base.Channel.aedoConvertAsync(user_id, password, transaction_id, card_acceptor, new_acount_number, new_acount_branch, new_submit_date, new_tracking_indicator, new_frequency);
    }
    
    public System.Xml.XmlNode contractActivation(string user_id, string password, int transaction_id, string card_acceptor)
    {
        return base.Channel.contractActivation(user_id, password, transaction_id, card_acceptor);
    }
    
    public System.Threading.Tasks.Task<System.Xml.XmlNode> contractActivationAsync(string user_id, string password, int transaction_id, string card_acceptor)
    {
        return base.Channel.contractActivationAsync(user_id, password, transaction_id, card_acceptor);
    }
    
    public System.Xml.XmlNode contractCancellation(string user_id, string password, int transaction_id, string card_acceptor)
    {
        return base.Channel.contractCancellation(user_id, password, transaction_id, card_acceptor);
    }
    
    public System.Threading.Tasks.Task<System.Xml.XmlNode> contractCancellationAsync(string user_id, string password, int transaction_id, string card_acceptor)
    {
        return base.Channel.contractCancellationAsync(user_id, password, transaction_id, card_acceptor);
    }
    
    public System.Xml.XmlNode contractDateChange(string user_id, string password, int transaction_id, string card_acceptor, System.DateTime new_submit_date, string frequency)
    {
        return base.Channel.contractDateChange(user_id, password, transaction_id, card_acceptor, new_submit_date, frequency);
    }
    
    public System.Threading.Tasks.Task<System.Xml.XmlNode> contractDateChangeAsync(string user_id, string password, int transaction_id, string card_acceptor, System.DateTime new_submit_date, string frequency)
    {
        return base.Channel.contractDateChangeAsync(user_id, password, transaction_id, card_acceptor, new_submit_date, frequency);
    }
    
    public System.Xml.XmlNode contractTrackingChange(string user_id, string password, int transaction_id, string card_acceptor, string tracking_indicator)
    {
        return base.Channel.contractTrackingChange(user_id, password, transaction_id, card_acceptor, tracking_indicator);
    }
    
    public System.Threading.Tasks.Task<System.Xml.XmlNode> contractTrackingChangeAsync(string user_id, string password, int transaction_id, string card_acceptor, string tracking_indicator)
    {
        return base.Channel.contractTrackingChangeAsync(user_id, password, transaction_id, card_acceptor, tracking_indicator);
    }
    
    public System.Xml.XmlNode instalmentAmountChange(string user_id, string password, int transaction_id, string card_acceptor, int instalment, string new_amount)
    {
        return base.Channel.instalmentAmountChange(user_id, password, transaction_id, card_acceptor, instalment, new_amount);
    }
    
    public System.Threading.Tasks.Task<System.Xml.XmlNode> instalmentAmountChangeAsync(string user_id, string password, int transaction_id, string card_acceptor, int instalment, string new_amount)
    {
        return base.Channel.instalmentAmountChangeAsync(user_id, password, transaction_id, card_acceptor, instalment, new_amount);
    }
    
    public System.Xml.XmlNode instalmentCancellation(string user_id, string password, int transaction_id, string card_acceptor, int instalment)
    {
        return base.Channel.instalmentCancellation(user_id, password, transaction_id, card_acceptor, instalment);
    }
    
    public System.Threading.Tasks.Task<System.Xml.XmlNode> instalmentCancellationAsync(string user_id, string password, int transaction_id, string card_acceptor, int instalment)
    {
        return base.Channel.instalmentCancellationAsync(user_id, password, transaction_id, card_acceptor, instalment);
    }
    
    public System.Xml.XmlNode instalmentDateChange(string user_id, string password, int transaction_id, string card_acceptor, int instalment, System.DateTime new_submit_date)
    {
        return base.Channel.instalmentDateChange(user_id, password, transaction_id, card_acceptor, instalment, new_submit_date);
    }
    
    public System.Threading.Tasks.Task<System.Xml.XmlNode> instalmentDateChangeAsync(string user_id, string password, int transaction_id, string card_acceptor, int instalment, System.DateTime new_submit_date)
    {
        return base.Channel.instalmentDateChangeAsync(user_id, password, transaction_id, card_acceptor, instalment, new_submit_date);
    }
    
    public System.Xml.XmlNode instalmentMaintenance(string user_id, string password, int transaction_id, string card_acceptor, int instalment, System.DateTime new_submit_date, string new_tracking_indicator)
    {
        return base.Channel.instalmentMaintenance(user_id, password, transaction_id, card_acceptor, instalment, new_submit_date, new_tracking_indicator);
    }
    
    public System.Threading.Tasks.Task<System.Xml.XmlNode> instalmentMaintenanceAsync(string user_id, string password, int transaction_id, string card_acceptor, int instalment, System.DateTime new_submit_date, string new_tracking_indicator)
    {
        return base.Channel.instalmentMaintenanceAsync(user_id, password, transaction_id, card_acceptor, instalment, new_submit_date, new_tracking_indicator);
    }
    
    public System.Xml.XmlNode instalmentReschedule(string user_id, string password, int transaction_id, string card_acceptor, int instalment, System.DateTime new_submit_date)
    {
        return base.Channel.instalmentReschedule(user_id, password, transaction_id, card_acceptor, instalment, new_submit_date);
    }
    
    public System.Threading.Tasks.Task<System.Xml.XmlNode> instalmentRescheduleAsync(string user_id, string password, int transaction_id, string card_acceptor, int instalment, System.DateTime new_submit_date)
    {
        return base.Channel.instalmentRescheduleAsync(user_id, password, transaction_id, card_acceptor, instalment, new_submit_date);
    }
    
    public System.Xml.XmlNode instalmentRescheduleMaintenance(string user_id, string password, int transaction_id, string card_acceptor, int instalment, System.DateTime new_submit_date, string new_tracking_indicator)
    {
        return base.Channel.instalmentRescheduleMaintenance(user_id, password, transaction_id, card_acceptor, instalment, new_submit_date, new_tracking_indicator);
    }
    
    public System.Threading.Tasks.Task<System.Xml.XmlNode> instalmentRescheduleMaintenanceAsync(string user_id, string password, int transaction_id, string card_acceptor, int instalment, System.DateTime new_submit_date, string new_tracking_indicator)
    {
        return base.Channel.instalmentRescheduleMaintenanceAsync(user_id, password, transaction_id, card_acceptor, instalment, new_submit_date, new_tracking_indicator);
    }
    
    public System.Xml.XmlNode instalmentTrackingChange(string user_id, string password, int transaction_id, string card_acceptor, int instalment, string new_tracking_indicator)
    {
        return base.Channel.instalmentTrackingChange(user_id, password, transaction_id, card_acceptor, instalment, new_tracking_indicator);
    }
    
    public System.Threading.Tasks.Task<System.Xml.XmlNode> instalmentTrackingChangeAsync(string user_id, string password, int transaction_id, string card_acceptor, int instalment, string new_tracking_indicator)
    {
        return base.Channel.instalmentTrackingChangeAsync(user_id, password, transaction_id, card_acceptor, instalment, new_tracking_indicator);
    }
    
    public System.Xml.XmlNode instalmentRecall(string user_id, string password, int transaction_id, string card_acceptor, int instalment)
    {
        return base.Channel.instalmentRecall(user_id, password, transaction_id, card_acceptor, instalment);
    }
    
    public System.Threading.Tasks.Task<System.Xml.XmlNode> instalmentRecallAsync(string user_id, string password, int transaction_id, string card_acceptor, int instalment)
    {
        return base.Channel.instalmentRecallAsync(user_id, password, transaction_id, card_acceptor, instalment);
    }
    
    public System.Xml.XmlNode getTPFReport(int merchant_number, string username, string password, int service_type, int report_type, System.DateTime date_from, System.DateTime date_to, int token_id, int block_id)
    {
        return base.Channel.getTPFReport(merchant_number, username, password, service_type, report_type, date_from, date_to, token_id, block_id);
    }
    
    public System.Threading.Tasks.Task<System.Xml.XmlNode> getTPFReportAsync(int merchant_number, string username, string password, int service_type, int report_type, System.DateTime date_from, System.DateTime date_to, int token_id, int block_id)
    {
        return base.Channel.getTPFReportAsync(merchant_number, username, password, service_type, report_type, date_from, date_to, token_id, block_id);
    }
    
    public System.Xml.XmlNode checkTPF(string card_acceptor)
    {
        return base.Channel.checkTPF(card_acceptor);
    }
    
    public System.Threading.Tasks.Task<System.Xml.XmlNode> checkTPFAsync(string card_acceptor)
    {
        return base.Channel.checkTPFAsync(card_acceptor);
    }
    
    public System.Xml.XmlNode uploadTSPTransaction(
                int merchant_number, 
                string username, 
                string password, 
                int service_type, 
                string nominated_account_number, 
                string client_ref_1, 
                string client_ref_2, 
                string account_number, 
                string account_name, 
                string branch_code, 
                int account_type, 
                int frequency, 
                int entry_class, 
                int no_of_instalments, 
                System.DateTime action_date, 
                string transaction_value, 
                string client_id, 
                int days_warning, 
                int email_flag, 
                string email_address, 
                int sms_flag, 
                string cell_no)
    {
        return base.Channel.uploadTSPTransaction(merchant_number, username, password, service_type, nominated_account_number, client_ref_1, client_ref_2, account_number, account_name, branch_code, account_type, frequency, entry_class, no_of_instalments, action_date, transaction_value, client_id, days_warning, email_flag, email_address, sms_flag, cell_no);
    }
    
    public System.Threading.Tasks.Task<System.Xml.XmlNode> uploadTSPTransactionAsync(
                int merchant_number, 
                string username, 
                string password, 
                int service_type, 
                string nominated_account_number, 
                string client_ref_1, 
                string client_ref_2, 
                string account_number, 
                string account_name, 
                string branch_code, 
                int account_type, 
                int frequency, 
                int entry_class, 
                int no_of_instalments, 
                System.DateTime action_date, 
                string transaction_value, 
                string client_id, 
                int days_warning, 
                int email_flag, 
                string email_address, 
                int sms_flag, 
                string cell_no)
    {
        return base.Channel.uploadTSPTransactionAsync(merchant_number, username, password, service_type, nominated_account_number, client_ref_1, client_ref_2, account_number, account_name, branch_code, account_type, frequency, entry_class, no_of_instalments, action_date, transaction_value, client_id, days_warning, email_flag, email_address, sms_flag, cell_no);
    }
    
    public System.Xml.XmlNode uploadCCTransaction(
                int merchant_number, 
                string username, 
                string password, 
                int service_type, 
                string nominated_account_number, 
                string client_ref_1, 
                string client_ref_2, 
                int frequency, 
                int no_of_instalments, 
                System.DateTime action_date, 
                string transaction_value, 
                string client_id, 
                string credit_card_number, 
                string cvv2, 
                string expiry_date, 
                int days_warning, 
                int email_flag, 
                string email_address, 
                int sms_flag, 
                string cell_no)
    {
        return base.Channel.uploadCCTransaction(merchant_number, username, password, service_type, nominated_account_number, client_ref_1, client_ref_2, frequency, no_of_instalments, action_date, transaction_value, client_id, credit_card_number, cvv2, expiry_date, days_warning, email_flag, email_address, sms_flag, cell_no);
    }
    
    public System.Threading.Tasks.Task<System.Xml.XmlNode> uploadCCTransactionAsync(
                int merchant_number, 
                string username, 
                string password, 
                int service_type, 
                string nominated_account_number, 
                string client_ref_1, 
                string client_ref_2, 
                int frequency, 
                int no_of_instalments, 
                System.DateTime action_date, 
                string transaction_value, 
                string client_id, 
                string credit_card_number, 
                string cvv2, 
                string expiry_date, 
                int days_warning, 
                int email_flag, 
                string email_address, 
                int sms_flag, 
                string cell_no)
    {
        return base.Channel.uploadCCTransactionAsync(merchant_number, username, password, service_type, nominated_account_number, client_ref_1, client_ref_2, frequency, no_of_instalments, action_date, transaction_value, client_id, credit_card_number, cvv2, expiry_date, days_warning, email_flag, email_address, sms_flag, cell_no);
    }
    
    public System.Xml.XmlNode uploadNaedoTransaction(
                int merchant_number, 
                string username, 
                string password, 
                int service_type, 
                string nominated_account_number, 
                string client_ref_1, 
                string client_ref_2, 
                string account_number, 
                string account_name, 
                string branch_code, 
                int account_type, 
                int frequency, 
                int tracking_indicator, 
                int no_of_instalments, 
                System.DateTime action_date, 
                string transaction_value, 
                string client_id, 
                int days_warning, 
                int email_flag, 
                string email_address, 
                int sms_flag, 
                string cell_no)
    {
        return base.Channel.uploadNaedoTransaction(merchant_number, username, password, service_type, nominated_account_number, client_ref_1, client_ref_2, account_number, account_name, branch_code, account_type, frequency, tracking_indicator, no_of_instalments, action_date, transaction_value, client_id, days_warning, email_flag, email_address, sms_flag, cell_no);
    }
    
    public System.Threading.Tasks.Task<System.Xml.XmlNode> uploadNaedoTransactionAsync(
                int merchant_number, 
                string username, 
                string password, 
                int service_type, 
                string nominated_account_number, 
                string client_ref_1, 
                string client_ref_2, 
                string account_number, 
                string account_name, 
                string branch_code, 
                int account_type, 
                int frequency, 
                int tracking_indicator, 
                int no_of_instalments, 
                System.DateTime action_date, 
                string transaction_value, 
                string client_id, 
                int days_warning, 
                int email_flag, 
                string email_address, 
                int sms_flag, 
                string cell_no)
    {
        return base.Channel.uploadNaedoTransactionAsync(merchant_number, username, password, service_type, nominated_account_number, client_ref_1, client_ref_2, account_number, account_name, branch_code, account_type, frequency, tracking_indicator, no_of_instalments, action_date, transaction_value, client_id, days_warning, email_flag, email_address, sms_flag, cell_no);
    }
    
    public System.Xml.XmlNode updateInstalment(int merchant_number, string username, string password, int service_type, int transaction_id, int instalment, string client_ref_2, System.DateTime action_date, string transaction_value)
    {
        return base.Channel.updateInstalment(merchant_number, username, password, service_type, transaction_id, instalment, client_ref_2, action_date, transaction_value);
    }
    
    public System.Threading.Tasks.Task<System.Xml.XmlNode> updateInstalmentAsync(int merchant_number, string username, string password, int service_type, int transaction_id, int instalment, string client_ref_2, System.DateTime action_date, string transaction_value)
    {
        return base.Channel.updateInstalmentAsync(merchant_number, username, password, service_type, transaction_id, instalment, client_ref_2, action_date, transaction_value);
    }
    
    public System.Xml.XmlNode cancelTransaction(int merchant_number, string username, string password, int service_type, int transaction_id, string client_ref_2)
    {
        return base.Channel.cancelTransaction(merchant_number, username, password, service_type, transaction_id, client_ref_2);
    }
    
    public System.Threading.Tasks.Task<System.Xml.XmlNode> cancelTransactionAsync(int merchant_number, string username, string password, int service_type, int transaction_id, string client_ref_2)
    {
        return base.Channel.cancelTransactionAsync(merchant_number, username, password, service_type, transaction_id, client_ref_2);
    }
    
    public System.Xml.XmlNode cancelInstalment(int merchant_number, string username, string password, int service_type, int transaction_id, int instalment, string client_ref_2)
    {
        return base.Channel.cancelInstalment(merchant_number, username, password, service_type, transaction_id, instalment, client_ref_2);
    }
    
    public System.Threading.Tasks.Task<System.Xml.XmlNode> cancelInstalmentAsync(int merchant_number, string username, string password, int service_type, int transaction_id, int instalment, string client_ref_2)
    {
        return base.Channel.cancelInstalmentAsync(merchant_number, username, password, service_type, transaction_id, instalment, client_ref_2);
    }
    
    public System.Xml.XmlNode CDVCheck(int merchant_number, string username, string password, string account_number, int account_type, string branch_code)
    {
        return base.Channel.CDVCheck(merchant_number, username, password, account_number, account_type, branch_code);
    }
    
    public System.Threading.Tasks.Task<System.Xml.XmlNode> CDVCheckAsync(int merchant_number, string username, string password, string account_number, int account_type, string branch_code)
    {
        return base.Channel.CDVCheckAsync(merchant_number, username, password, account_number, account_type, branch_code);
    }
    
    public System.Xml.XmlNode updateTSPTransaction(int merchant_number, string username, string password, int service_type, int transaction_id, string current_client_ref_2, string client_ref_1, string client_ref_2, string account_number, string branch_code, int account_type)
    {
        return base.Channel.updateTSPTransaction(merchant_number, username, password, service_type, transaction_id, current_client_ref_2, client_ref_1, client_ref_2, account_number, branch_code, account_type);
    }
    
    public System.Threading.Tasks.Task<System.Xml.XmlNode> updateTSPTransactionAsync(int merchant_number, string username, string password, int service_type, int transaction_id, string current_client_ref_2, string client_ref_1, string client_ref_2, string account_number, string branch_code, int account_type)
    {
        return base.Channel.updateTSPTransactionAsync(merchant_number, username, password, service_type, transaction_id, current_client_ref_2, client_ref_1, client_ref_2, account_number, branch_code, account_type);
    }
    
    public System.Xml.XmlNode updateNaedoTransaction(int merchant_number, string username, string password, int service_type, int transaction_id, string current_client_ref_2, string client_ref_1, string client_ref_2, string account_number, string branch_code, int account_type, int tracking_indicator)
    {
        return base.Channel.updateNaedoTransaction(merchant_number, username, password, service_type, transaction_id, current_client_ref_2, client_ref_1, client_ref_2, account_number, branch_code, account_type, tracking_indicator);
    }
    
    public System.Threading.Tasks.Task<System.Xml.XmlNode> updateNaedoTransactionAsync(int merchant_number, string username, string password, int service_type, int transaction_id, string current_client_ref_2, string client_ref_1, string client_ref_2, string account_number, string branch_code, int account_type, int tracking_indicator)
    {
        return base.Channel.updateNaedoTransactionAsync(merchant_number, username, password, service_type, transaction_id, current_client_ref_2, client_ref_1, client_ref_2, account_number, branch_code, account_type, tracking_indicator);
    }
    
    public System.Xml.XmlNode updateCCTransaction(int merchant_number, string username, string password, int service_type, int transaction_id, string current_client_ref_2, string client_ref_1, string client_ref_2)
    {
        return base.Channel.updateCCTransaction(merchant_number, username, password, service_type, transaction_id, current_client_ref_2, client_ref_1, client_ref_2);
    }
    
    public System.Threading.Tasks.Task<System.Xml.XmlNode> updateCCTransactionAsync(int merchant_number, string username, string password, int service_type, int transaction_id, string current_client_ref_2, string client_ref_1, string client_ref_2)
    {
        return base.Channel.updateCCTransactionAsync(merchant_number, username, password, service_type, transaction_id, current_client_ref_2, client_ref_1, client_ref_2);
    }
    
    public System.Xml.XmlNode getReport(int merchant_number, string username, string password, int service_type, int report_type, System.DateTime date_from, System.DateTime date_to, int token_id, int block_id)
    {
        return base.Channel.getReport(merchant_number, username, password, service_type, report_type, date_from, date_to, token_id, block_id);
    }
    
    public System.Threading.Tasks.Task<System.Xml.XmlNode> getReportAsync(int merchant_number, string username, string password, int service_type, int report_type, System.DateTime date_from, System.DateTime date_to, int token_id, int block_id)
    {
        return base.Channel.getReportAsync(merchant_number, username, password, service_type, report_type, date_from, date_to, token_id, block_id);
    }
    
    public System.Xml.XmlNode getNotification(int merchant_number, string username, string password, System.DateTime date_from, System.DateTime date_to, string reason_code, int token_id, int block_id)
    {
        return base.Channel.getNotification(merchant_number, username, password, date_from, date_to, reason_code, token_id, block_id);
    }
    
    public System.Threading.Tasks.Task<System.Xml.XmlNode> getNotificationAsync(int merchant_number, string username, string password, System.DateTime date_from, System.DateTime date_to, string reason_code, int token_id, int block_id)
    {
        return base.Channel.getNotificationAsync(merchant_number, username, password, date_from, date_to, reason_code, token_id, block_id);
    }
    
    public System.Xml.XmlNode requestProgressNAEDO(string bank)
    {
        return base.Channel.requestProgressNAEDO(bank);
    }
    
    public System.Threading.Tasks.Task<System.Xml.XmlNode> requestProgressNAEDOAsync(string bank)
    {
        return base.Channel.requestProgressNAEDOAsync(bank);
    }
    
    public System.Xml.XmlNode getReportEDO(int merchant_number, string username, string password, int service_type, int report_type, System.DateTime date_from, System.DateTime date_to, int token_id, int block_id)
    {
        return base.Channel.getReportEDO(merchant_number, username, password, service_type, report_type, date_from, date_to, token_id, block_id);
    }
    
    public System.Threading.Tasks.Task<System.Xml.XmlNode> getReportEDOAsync(int merchant_number, string username, string password, int service_type, int report_type, System.DateTime date_from, System.DateTime date_to, int token_id, int block_id)
    {
        return base.Channel.getReportEDOAsync(merchant_number, username, password, service_type, report_type, date_from, date_to, token_id, block_id);
    }
}
