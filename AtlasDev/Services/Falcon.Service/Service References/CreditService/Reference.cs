//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Falcon.Service.CreditService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreditResponse", Namespace="http://schemas.datacontract.org/2004/07/Atlas.RabbitMQ.Messages.Credit")]
    [System.SerializableAttribute()]
    public partial class CreditResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.Guid CorrelationIdk__BackingFieldField;
        
        private System.DateTime CreatedAtk__BackingFieldField;
        
        private Falcon.Service.CreditService.AccountAccountStatus Decisionk__BackingFieldField;
        
        private string Errork__BackingFieldField;
        
        private string Filek__BackingFieldField;
        
        private System.Nullable<long> MessageIdk__BackingFieldField;
        
        private string NLREnquiryNok__BackingFieldField;
        
        private System.Collections.Generic.List<Falcon.Service.CreditService.Product> Productsk__BackingFieldField;
        
        private System.Collections.Generic.List<string> Reasonsk__BackingFieldField;
        
        private string RiskTypek__BackingFieldField;
        
        private string Scorek__BackingFieldField;
        
        private decimal TotalCPAAccountk__BackingFieldField;
        
        private decimal TotalNLRAccountk__BackingFieldField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<CorrelationId>k__BackingField", IsRequired=true)]
        public System.Guid CorrelationIdk__BackingField {
            get {
                return this.CorrelationIdk__BackingFieldField;
            }
            set {
                if ((this.CorrelationIdk__BackingFieldField.Equals(value) != true)) {
                    this.CorrelationIdk__BackingFieldField = value;
                    this.RaisePropertyChanged("CorrelationIdk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<CreatedAt>k__BackingField", IsRequired=true)]
        public System.DateTime CreatedAtk__BackingField {
            get {
                return this.CreatedAtk__BackingFieldField;
            }
            set {
                if ((this.CreatedAtk__BackingFieldField.Equals(value) != true)) {
                    this.CreatedAtk__BackingFieldField = value;
                    this.RaisePropertyChanged("CreatedAtk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Decision>k__BackingField", IsRequired=true)]
        public Falcon.Service.CreditService.AccountAccountStatus Decisionk__BackingField {
            get {
                return this.Decisionk__BackingFieldField;
            }
            set {
                if ((this.Decisionk__BackingFieldField.Equals(value) != true)) {
                    this.Decisionk__BackingFieldField = value;
                    this.RaisePropertyChanged("Decisionk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Error>k__BackingField", IsRequired=true)]
        public string Errork__BackingField {
            get {
                return this.Errork__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.Errork__BackingFieldField, value) != true)) {
                    this.Errork__BackingFieldField = value;
                    this.RaisePropertyChanged("Errork__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<File>k__BackingField", IsRequired=true)]
        public string Filek__BackingField {
            get {
                return this.Filek__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.Filek__BackingFieldField, value) != true)) {
                    this.Filek__BackingFieldField = value;
                    this.RaisePropertyChanged("Filek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<MessageId>k__BackingField", IsRequired=true)]
        public System.Nullable<long> MessageIdk__BackingField {
            get {
                return this.MessageIdk__BackingFieldField;
            }
            set {
                if ((this.MessageIdk__BackingFieldField.Equals(value) != true)) {
                    this.MessageIdk__BackingFieldField = value;
                    this.RaisePropertyChanged("MessageIdk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<NLREnquiryNo>k__BackingField", IsRequired=true)]
        public string NLREnquiryNok__BackingField {
            get {
                return this.NLREnquiryNok__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.NLREnquiryNok__BackingFieldField, value) != true)) {
                    this.NLREnquiryNok__BackingFieldField = value;
                    this.RaisePropertyChanged("NLREnquiryNok__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Products>k__BackingField", IsRequired=true)]
        public System.Collections.Generic.List<Falcon.Service.CreditService.Product> Productsk__BackingField {
            get {
                return this.Productsk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.Productsk__BackingFieldField, value) != true)) {
                    this.Productsk__BackingFieldField = value;
                    this.RaisePropertyChanged("Productsk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Reasons>k__BackingField", IsRequired=true)]
        public System.Collections.Generic.List<string> Reasonsk__BackingField {
            get {
                return this.Reasonsk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.Reasonsk__BackingFieldField, value) != true)) {
                    this.Reasonsk__BackingFieldField = value;
                    this.RaisePropertyChanged("Reasonsk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<RiskType>k__BackingField", IsRequired=true)]
        public string RiskTypek__BackingField {
            get {
                return this.RiskTypek__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.RiskTypek__BackingFieldField, value) != true)) {
                    this.RiskTypek__BackingFieldField = value;
                    this.RaisePropertyChanged("RiskTypek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Score>k__BackingField", IsRequired=true)]
        public string Scorek__BackingField {
            get {
                return this.Scorek__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.Scorek__BackingFieldField, value) != true)) {
                    this.Scorek__BackingFieldField = value;
                    this.RaisePropertyChanged("Scorek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<TotalCPAAccount>k__BackingField", IsRequired=true)]
        public decimal TotalCPAAccountk__BackingField {
            get {
                return this.TotalCPAAccountk__BackingFieldField;
            }
            set {
                if ((this.TotalCPAAccountk__BackingFieldField.Equals(value) != true)) {
                    this.TotalCPAAccountk__BackingFieldField = value;
                    this.RaisePropertyChanged("TotalCPAAccountk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<TotalNLRAccount>k__BackingField", IsRequired=true)]
        public decimal TotalNLRAccountk__BackingField {
            get {
                return this.TotalNLRAccountk__BackingFieldField;
            }
            set {
                if ((this.TotalNLRAccountk__BackingFieldField.Equals(value) != true)) {
                    this.TotalNLRAccountk__BackingFieldField = value;
                    this.RaisePropertyChanged("TotalNLRAccountk__BackingField");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Account.AccountStatus", Namespace="http://schemas.datacontract.org/2004/07/Atlas.Enumerators")]
    public enum AccountAccountStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Inactive = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Technical_Error = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Pending = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cancelled = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Declined = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Review = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PreApproved = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Approved = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Open = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Legal = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WrittenOff = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Settled = 70,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Closed = 80,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product", Namespace="http://schemas.datacontract.org/2004/07/Atlas.RabbitMQ.Messages.Credit")]
    [System.SerializableAttribute()]
    public partial class Product : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OutcomeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Falcon.Service.CreditService.Reason> ReasonsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Outcome {
            get {
                return this.OutcomeField;
            }
            set {
                if ((object.ReferenceEquals(this.OutcomeField, value) != true)) {
                    this.OutcomeField = value;
                    this.RaisePropertyChanged("Outcome");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Falcon.Service.CreditService.Reason> Reasons {
            get {
                return this.ReasonsField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonsField, value) != true)) {
                    this.ReasonsField = value;
                    this.RaisePropertyChanged("Reasons");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Reason", Namespace="http://schemas.datacontract.org/2004/07/Atlas.RabbitMQ.Messages.Credit")]
    [System.SerializableAttribute()]
    public partial class Reason : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CreditService.ICreditServer")]
    public interface ICreditServer {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICreditServer/QueueEnquiry", ReplyAction="http://tempuri.org/ICreditServer/QueueEnquiryResponse")]
        Falcon.Service.CreditService.QueueEnquiryResponse QueueEnquiry(Falcon.Service.CreditService.QueueEnquiryRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICreditServer/QueueEnquiry", ReplyAction="http://tempuri.org/ICreditServer/QueueEnquiryResponse")]
        System.Threading.Tasks.Task<Falcon.Service.CreditService.QueueEnquiryResponse> QueueEnquiryAsync(Falcon.Service.CreditService.QueueEnquiryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICreditServer/Enquiry", ReplyAction="http://tempuri.org/ICreditServer/EnquiryResponse")]
        Falcon.Service.CreditService.CreditResponse Enquiry(
                    long accountId, 
                    string firstName, 
                    string surname, 
                    string IdNumber, 
                    string gender, 
                    System.DateTime dateOfBirth, 
                    string addressLine1, 
                    string addressLine2, 
                    string addressLine3, 
                    string addressLine4, 
                    string postalCode, 
                    string homeTelCode, 
                    string homeTelNo, 
                    string workTelCode, 
                    string workTelNo, 
                    string cellNo, 
                    bool isIDPassportNo, 
                    bool isExistingClient, 
                    string requestUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICreditServer/Enquiry", ReplyAction="http://tempuri.org/ICreditServer/EnquiryResponse")]
        System.Threading.Tasks.Task<Falcon.Service.CreditService.CreditResponse> EnquiryAsync(
                    long accountId, 
                    string firstName, 
                    string surname, 
                    string IdNumber, 
                    string gender, 
                    System.DateTime dateOfBirth, 
                    string addressLine1, 
                    string addressLine2, 
                    string addressLine3, 
                    string addressLine4, 
                    string postalCode, 
                    string homeTelCode, 
                    string homeTelNo, 
                    string workTelCode, 
                    string workTelNo, 
                    string cellNo, 
                    bool isIDPassportNo, 
                    bool isExistingClient, 
                    string requestUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICreditServer/GetReport", ReplyAction="http://tempuri.org/ICreditServer/GetReportResponse")]
        string GetReport(long enquiryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICreditServer/GetReport", ReplyAction="http://tempuri.org/ICreditServer/GetReportResponse")]
        System.Threading.Tasks.Task<string> GetReportAsync(long enquiryId);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="QueueEnquiry", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class QueueEnquiryRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string legacyBranchNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string firstName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string surname;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string IdNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string gender;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public System.DateTime dateOfBirth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public string addressLine1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        public string addressLine2;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=8)]
        public string addressLine3;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=9)]
        public string addressLine4;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=10)]
        public string postalCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=11)]
        public string homeTelCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=12)]
        public string homeTelNo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=13)]
        public string workTelCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=14)]
        public string workTelNo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=15)]
        public string cellNo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=16)]
        public bool isIDPassportNo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=17)]
        public bool isExistingClient;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=18)]
        public string requestUser;
        
        public QueueEnquiryRequest() {
        }
        
        public QueueEnquiryRequest(
                    string legacyBranchNum, 
                    string firstName, 
                    string surname, 
                    string IdNumber, 
                    string gender, 
                    System.DateTime dateOfBirth, 
                    string addressLine1, 
                    string addressLine2, 
                    string addressLine3, 
                    string addressLine4, 
                    string postalCode, 
                    string homeTelCode, 
                    string homeTelNo, 
                    string workTelCode, 
                    string workTelNo, 
                    string cellNo, 
                    bool isIDPassportNo, 
                    bool isExistingClient, 
                    string requestUser) {
            this.legacyBranchNum = legacyBranchNum;
            this.firstName = firstName;
            this.surname = surname;
            this.IdNumber = IdNumber;
            this.gender = gender;
            this.dateOfBirth = dateOfBirth;
            this.addressLine1 = addressLine1;
            this.addressLine2 = addressLine2;
            this.addressLine3 = addressLine3;
            this.addressLine4 = addressLine4;
            this.postalCode = postalCode;
            this.homeTelCode = homeTelCode;
            this.homeTelNo = homeTelNo;
            this.workTelCode = workTelCode;
            this.workTelNo = workTelNo;
            this.cellNo = cellNo;
            this.isIDPassportNo = isIDPassportNo;
            this.isExistingClient = isExistingClient;
            this.requestUser = requestUser;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="QueueEnquiryResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class QueueEnquiryResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public decimal totalCPAAccount;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public decimal totalNLRAccount;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string nlrEnquiryNo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string enquiryDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public int score;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public string riskType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public System.Collections.Generic.List<string> reasons;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        public string file;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=8)]
        public System.Collections.Generic.List<string> errors;
        
        public QueueEnquiryResponse() {
        }
        
        public QueueEnquiryResponse(decimal totalCPAAccount, decimal totalNLRAccount, string nlrEnquiryNo, string enquiryDate, int score, string riskType, System.Collections.Generic.List<string> reasons, string file, System.Collections.Generic.List<string> errors) {
            this.totalCPAAccount = totalCPAAccount;
            this.totalNLRAccount = totalNLRAccount;
            this.nlrEnquiryNo = nlrEnquiryNo;
            this.enquiryDate = enquiryDate;
            this.score = score;
            this.riskType = riskType;
            this.reasons = reasons;
            this.file = file;
            this.errors = errors;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICreditServerChannel : Falcon.Service.CreditService.ICreditServer, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreditServerClient : System.ServiceModel.ClientBase<Falcon.Service.CreditService.ICreditServer>, Falcon.Service.CreditService.ICreditServer {
        
        public CreditServerClient() {
        }
        
        public CreditServerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CreditServerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CreditServerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CreditServerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Falcon.Service.CreditService.QueueEnquiryResponse Falcon.Service.CreditService.ICreditServer.QueueEnquiry(Falcon.Service.CreditService.QueueEnquiryRequest request) {
            return base.Channel.QueueEnquiry(request);
        }
        
        public decimal QueueEnquiry(
                    string legacyBranchNum, 
                    string firstName, 
                    string surname, 
                    string IdNumber, 
                    string gender, 
                    System.DateTime dateOfBirth, 
                    string addressLine1, 
                    string addressLine2, 
                    string addressLine3, 
                    string addressLine4, 
                    string postalCode, 
                    string homeTelCode, 
                    string homeTelNo, 
                    string workTelCode, 
                    string workTelNo, 
                    string cellNo, 
                    bool isIDPassportNo, 
                    bool isExistingClient, 
                    string requestUser, 
                    out decimal totalNLRAccount, 
                    out string nlrEnquiryNo, 
                    out string enquiryDate, 
                    out int score, 
                    out string riskType, 
                    out System.Collections.Generic.List<string> reasons, 
                    out string file, 
                    out System.Collections.Generic.List<string> errors) {
            Falcon.Service.CreditService.QueueEnquiryRequest inValue = new Falcon.Service.CreditService.QueueEnquiryRequest();
            inValue.legacyBranchNum = legacyBranchNum;
            inValue.firstName = firstName;
            inValue.surname = surname;
            inValue.IdNumber = IdNumber;
            inValue.gender = gender;
            inValue.dateOfBirth = dateOfBirth;
            inValue.addressLine1 = addressLine1;
            inValue.addressLine2 = addressLine2;
            inValue.addressLine3 = addressLine3;
            inValue.addressLine4 = addressLine4;
            inValue.postalCode = postalCode;
            inValue.homeTelCode = homeTelCode;
            inValue.homeTelNo = homeTelNo;
            inValue.workTelCode = workTelCode;
            inValue.workTelNo = workTelNo;
            inValue.cellNo = cellNo;
            inValue.isIDPassportNo = isIDPassportNo;
            inValue.isExistingClient = isExistingClient;
            inValue.requestUser = requestUser;
            Falcon.Service.CreditService.QueueEnquiryResponse retVal = ((Falcon.Service.CreditService.ICreditServer)(this)).QueueEnquiry(inValue);
            totalNLRAccount = retVal.totalNLRAccount;
            nlrEnquiryNo = retVal.nlrEnquiryNo;
            enquiryDate = retVal.enquiryDate;
            score = retVal.score;
            riskType = retVal.riskType;
            reasons = retVal.reasons;
            file = retVal.file;
            errors = retVal.errors;
            return retVal.totalCPAAccount;
        }
        
        public System.Threading.Tasks.Task<Falcon.Service.CreditService.QueueEnquiryResponse> QueueEnquiryAsync(Falcon.Service.CreditService.QueueEnquiryRequest request) {
            return base.Channel.QueueEnquiryAsync(request);
        }
        
        public Falcon.Service.CreditService.CreditResponse Enquiry(
                    long accountId, 
                    string firstName, 
                    string surname, 
                    string IdNumber, 
                    string gender, 
                    System.DateTime dateOfBirth, 
                    string addressLine1, 
                    string addressLine2, 
                    string addressLine3, 
                    string addressLine4, 
                    string postalCode, 
                    string homeTelCode, 
                    string homeTelNo, 
                    string workTelCode, 
                    string workTelNo, 
                    string cellNo, 
                    bool isIDPassportNo, 
                    bool isExistingClient, 
                    string requestUser) {
            return base.Channel.Enquiry(accountId, firstName, surname, IdNumber, gender, dateOfBirth, addressLine1, addressLine2, addressLine3, addressLine4, postalCode, homeTelCode, homeTelNo, workTelCode, workTelNo, cellNo, isIDPassportNo, isExistingClient, requestUser);
        }
        
        public System.Threading.Tasks.Task<Falcon.Service.CreditService.CreditResponse> EnquiryAsync(
                    long accountId, 
                    string firstName, 
                    string surname, 
                    string IdNumber, 
                    string gender, 
                    System.DateTime dateOfBirth, 
                    string addressLine1, 
                    string addressLine2, 
                    string addressLine3, 
                    string addressLine4, 
                    string postalCode, 
                    string homeTelCode, 
                    string homeTelNo, 
                    string workTelCode, 
                    string workTelNo, 
                    string cellNo, 
                    bool isIDPassportNo, 
                    bool isExistingClient, 
                    string requestUser) {
            return base.Channel.EnquiryAsync(accountId, firstName, surname, IdNumber, gender, dateOfBirth, addressLine1, addressLine2, addressLine3, addressLine4, postalCode, homeTelCode, homeTelNo, workTelCode, workTelNo, cellNo, isIDPassportNo, isExistingClient, requestUser);
        }
        
        public string GetReport(long enquiryId) {
            return base.Channel.GetReport(enquiryId);
        }
        
        public System.Threading.Tasks.Task<string> GetReportAsync(long enquiryId) {
            return base.Channel.GetReportAsync(enquiryId);
        }
    }
}
